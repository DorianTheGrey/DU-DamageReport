{"slots":{"0":{"name":"slot1","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"CheckClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"2"},"key":"0"},{"code":"CheckClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"3"},"key":"1"},{"code":"CheckClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"4"},"key":"2"},{"code":"CheckClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"5"},"key":"3"},{"code":"CheckClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"6"},"key":"4"},{"code":"CheckClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"7"},"key":"5"},{"code":"CheckClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"8"},"key":"6"},{"code":"CheckClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"9"},"key":"7"},{"code":"--[[\n    Damage Report 3.2\n    A LUA script for Dual Universe\n\n    Created By Dorian Gray\n    Ingame: DorianGray\n    Discord: Dorian Gray#2623\n\n    You can find/update this script on GitHub. Explanations, installation and usage information as well as screenshots can be found there too.\n    GitHub: https://github.com/DorianTheGrey/DU-DamageReport\n\n    GNU Public License 3.0. Use whatever you want, be so kind to leave credit.\n    \n    Credits & thanks:\n        Thanks to Bayouking1 and kalazzerx for managing their forks of this script during my long absence to support the community. :)\n        Thanks to Bayouking1 for fixing rocket fuel calculations.\n        Thanks to NovaQuark for creating the MMO of the century.\n        Thanks to Jericho, Dmentia and Archaegeo for learning a lot from their fine scripts.\n        Thanks to TheBlacklist for testing and wonderful suggestions.\n        SVG patterns by Hero Patterns.\n        DU atlas data from Jayle Break.\n        \n]]\n\nfunction GenerateCommaValue(a, b, c)\n    b = b or false;\n    c = c or 1;\n    local d = a;\n    if b == true then\n        if string.len(a) >= 4 then\n            d = string.format(\"%.\" .. c .. \"fk\", a / 1000)\n        else\n            d = string.format(\"%.\" .. c .. \"f\", a)\n        end\n    else\n        while true do\n            d, k = string.gsub(d, \"^(-?%d+)(%d%d%d)\", '%1,%2')\n            if k == 0 then break end\n        end\n    end\n    return d\nend\nfunction PrintConsole(e, f)\n    f = f or false;\n    if f then\n        system.print(\n            \"------------------------------------------------------------------------\")\n    end\n    system.print(e)\n    if f then\n        system.print(\n            \"------------------------------------------------------------------------\")\n    end\nend\nfunction DrawCenteredText(e)\n    if screens ~= nil and #screens > 0 then\n        for g = 1, #screens, 1 do screens[g].element.setCenteredText(e) end\n    end\nend\nfunction ClearConsole() for g = 1, 10, 1 do PrintConsole() end end\nfunction SwitchScreens(h)\n    h = h or \"on\"\n    if screens ~= nil and #screens > 0 then\n        for g = 1, #screens, 1 do\n            if h == \"on\" then\n                screens[g].element.clear()\n                screens[g].element.activate()\n                screens[g].active = true\n            else\n                screens[g].element.clear()\n                screens[g].element.deactivate()\n                screens[g].active = false\n            end\n        end\n    end\nend\nfunction GetSecondsString(i)\n    local i = tonumber(i)\n    if i == nil or i <= 0 then\n        return \"-\"\n    else\n        days = string.format(\"%2.f\", math.floor(i / (3600 * 24)))\n        hours = string.format(\"%2.f\", math.floor(i / 3600 - days * 24))\n        mins = string.format(\"%2.f\",\n                             math.floor(i / 60 - hours * 60 - days * 24 * 60))\n        secs = string.format(\"%2.f\", math.floor(\n                                 i - hours * 3600 - days * 24 * 60 * 60 - mins *\n                                     60))\n        str = \"\"\n        if tonumber(days) > 0 then str = str .. days .. \"d \" end\n        if tonumber(hours) > 0 then str = str .. hours .. \"h \" end\n        if tonumber(mins) > 0 then str = str .. mins .. \"m \" end\n        if tonumber(secs) > 0 then str = str .. secs .. \"s\" end\n        return str\n    end\nend\nfunction replace_char(j, str, l) return str:sub(1, j - 1) .. l .. str:sub(j + 1) end\nfunction epochTime()\n    function rZ(m)\n        if string.len(m) <= 1 then\n            return \"0\" .. m\n        else\n            return m\n        end\n    end\n    function dPoint(n)\n        if not (n == math.floor(n)) then\n            return true\n        else\n            return false\n        end\n    end\n    function lYear(year)\n        if not dPoint(year / 4) then\n            if dPoint(year / 100) then\n                return true\n            else\n                if not dPoint(year / 400) then\n                    return true\n                else\n                    return false\n                end\n            end\n        else\n            return false\n        end\n    end\n    local o = 5;\n    local p = 3600;\n    local q = 86400;\n    local r = 31536000;\n    local s = 31622400;\n    local t = 2419200;\n    local g = 2505600;\n    local u = 2592000;\n    local k = 2678400;\n    local w = {4, 6, 9, 11}\n    local x = {1, 3, 5, 7, 8, 10, 12}\n    local y = 0;\n    local z = 1506816000;\n    local A = system.getTime()\n    _G[\"formerTime\"] = A;\n    if AddSummertimeHour == true then A = A + 3600 end\n    now = math.floor(A + z)\n    year = 1970;\n    secs = 0;\n    y = 0;\n    while secs + s < now or secs + r < now do\n        if lYear(year + 1) then\n            if secs + s < now then\n                secs = secs + s;\n                year = year + 1;\n                y = y + 366\n            end\n        else\n            if secs + r < now then\n                secs = secs + r;\n                year = year + 1;\n                y = y + 365\n            end\n        end\n    end\n    secondsRemaining = now - secs;\n    monthSecs = 0;\n    yearlYear = lYear(year)\n    month = 1;\n    while monthSecs + t < secondsRemaining or monthSecs + u < secondsRemaining or\n        monthSecs + k < secondsRemaining do\n        if month == 1 then\n            if monthSecs + k < secondsRemaining then\n                month = 2;\n                monthSecs = monthSecs + k;\n                y = y + 31\n            else\n                break\n            end\n        end\n        if month == 2 then\n            if not yearlYear then\n                if monthSecs + t < secondsRemaining then\n                    month = 3;\n                    monthSecs = monthSecs + t;\n                    y = y + 28\n                else\n                    break\n                end\n            else\n                if monthSecs + g < secondsRemaining then\n                    month = 3;\n                    monthSecs = monthSecs + g;\n                    y = y + 29\n                else\n                    break\n                end\n            end\n        end\n        if month == 3 then\n            if monthSecs + k < secondsRemaining then\n                month = 4;\n                monthSecs = monthSecs + k;\n                y = y + 31\n            else\n                break\n            end\n        end\n        if month == 4 then\n            if monthSecs + u < secondsRemaining then\n                month = 5;\n                monthSecs = monthSecs + u;\n                y = y + 30\n            else\n                break\n            end\n        end\n        if month == 5 then\n            if monthSecs + k < secondsRemaining then\n                month = 6;\n                monthSecs = monthSecs + k;\n                y = y + 31\n            else\n                break\n            end\n        end\n        if month == 6 then\n            if monthSecs + u < secondsRemaining then\n                month = 7;\n                monthSecs = monthSecs + u;\n                y = y + 30\n            else\n                break\n            end\n        end\n        if month == 7 then\n            if monthSecs + k < secondsRemaining then\n                month = 8;\n                monthSecs = monthSecs + k;\n                y = y + 31\n            else\n                break\n            end\n        end\n        if month == 8 then\n            if monthSecs + k < secondsRemaining then\n                month = 9;\n                monthSecs = monthSecs + k;\n                y = y + 31\n            else\n                break\n            end\n        end\n        if month == 9 then\n            if monthSecs + u < secondsRemaining then\n                month = 10;\n                monthSecs = monthSecs + u;\n                y = y + 30\n            else\n                break\n            end\n        end\n        if month == 10 then\n            if monthSecs + k < secondsRemaining then\n                month = 11;\n                monthSecs = monthSecs + k;\n                y = y + 31\n            else\n                break\n            end\n        end\n        if month == 11 then\n            if monthSecs + u < secondsRemaining then\n                month = 12;\n                monthSecs = monthSecs + u;\n                y = y + 30\n            else\n                break\n            end\n        end\n    end\n    day = 1;\n    daySecs = 0;\n    daySecsRemaining = secondsRemaining - monthSecs;\n    while daySecs + q < daySecsRemaining do\n        day = day + 1;\n        daySecs = daySecs + q;\n        y = y + 1\n    end\n    hour = 0;\n    hourSecs = 0;\n    hourSecsRemaining = daySecsRemaining - daySecs;\n    while hourSecs + p < hourSecsRemaining do\n        hour = hour + 1;\n        hourSecs = hourSecs + p\n    end\n    minute = 0;\n    minuteSecs = 0;\n    minuteSecsRemaining = hourSecsRemaining - hourSecs;\n    while minuteSecs + 60 < minuteSecsRemaining do\n        minute = minute + 1;\n        minuteSecs = minuteSecs + 60\n    end\n    second = math.floor(now % 60)\n    year = rZ(year)\n    month = rZ(month)\n    day = rZ(day)\n    hour = rZ(hour)\n    minute = rZ(minute)\n    second = rZ(second)\n    return [[<text class=\"f250mx\" x=\"960\" y=\"540\">]] .. hour .. \":\" .. minute ..\n               [[</text>]] .. [[<text class=\"f100mx\" x=\"960\" y=\"660\">]] .. year ..\n               \"/\" .. month .. \"/\" .. day .. [[</text>]]\nend\nfunction ToggleHUD()\n    if HUDMode == true then\n        HUDMode = false;\n        forceDamageRedraw = true;\n        hudSelectedIndex = 0;\n        highlightID = 0;\n        HideHighlight()\n        SetRefresh()\n        RenderScreens()\n    else\n        HUDMode = true;\n        forceDamageRedraw = true;\n        hudSelectedIndex = 0;\n        highlightID = 0;\n        HideHighlight()\n        SetRefresh()\n        RenderScreens()\n    end\nend\nfunction HudDeselectElement()\n    hudSelectedIndex = 0;\n    hudStartIndex = 1;\n    highlightID = 0;\n    HideHighlight()\n    if HUDMode == true then\n        SetRefresh(\"damage\")\n        SetRefresh(\"damageoutline\")\n        RenderScreens()\n    end\nend\nfunction ChangeHudSelectedElement(B)\n    if HUDMode == true and #rE > 0 then\n        hudSelectedIndex = hudSelectedIndex + B;\n        if hudSelectedIndex < 1 then\n            hudSelectedIndex = 1\n        elseif hudSelectedIndex > #rE then\n            hudSelectedIndex = #rE\n        end\n        if hudSelectedIndex > 9 then hudStartIndex = hudSelectedIndex - 9 end\n        if hudSelectedIndex ~= 0 then\n            highlightID = rE[hudSelectedIndex].id;\n            if highlightID ~= nil and highlightID ~= 0 then\n                HideHighlight()\n                elementPosition = vec3(rE[hudSelectedIndex].pos)\n                highlightX = elementPosition.x - coreWorldOffset;\n                highlightY = elementPosition.y - coreWorldOffset;\n                highlightZ = elementPosition.z - coreWorldOffset;\n                highlightOn = true;\n                ShowHighlight()\n            end\n        end\n        SetRefresh(\"damage\")\n        SetRefresh(\"damageoutline\")\n        RenderScreens()\n    end\nend\nfunction HideHighlight()\n    if #hudArrowSticker > 0 then\n        for g in pairs(hudArrowSticker) do\n            core.deleteSticker(hudArrowSticker[g])\n        end\n        hudArrowSticker = {}\n    end\nend\nfunction ShowHighlight()\n    if highlightOn == true and highlightID > 0 then\n        table.insert(hudArrowSticker, core.spawnArrowSticker(highlightX + 2,\n                                                             highlightY,\n                                                             highlightZ, \"north\"))\n        table.insert(hudArrowSticker, core.spawnArrowSticker(highlightX,\n                                                             highlightY - 2,\n                                                             highlightZ, \"east\"))\n        table.insert(hudArrowSticker, core.spawnArrowSticker(highlightX - 2,\n                                                             highlightY,\n                                                             highlightZ, \"south\"))\n        table.insert(hudArrowSticker, core.spawnArrowSticker(highlightX,\n                                                             highlightY + 2,\n                                                             highlightZ, \"west\"))\n        table.insert(hudArrowSticker, core.spawnArrowSticker(highlightX,\n                                                             highlightY,\n                                                             highlightZ - 2,\n                                                             \"up\"))\n        table.insert(hudArrowSticker, core.spawnArrowSticker(highlightX,\n                                                             highlightY,\n                                                             highlightZ + 2,\n                                                             \"down\"))\n    end\nend\nfunction ToggleHighlight()\n    if highlightOn == true then\n        highlightOn = false;\n        HideHighlight()\n    else\n        highlightOn = true;\n        ShowHighlight()\n    end\nend\nfunction SortDamageTables()\n    table.sort(damagedElements,\n               function(m, n) return m.missinghp > n.missinghp end)\n    table.sort(brokenElements, function(m, n) return m.maxhp > n.maxhp end)\nend\nfunction getScraps(C, D)\n    D = D or false;\n    C = C - SkillRepairToolOptimization * 0.05 * C;\n    local E = math.ceil(C / (10 * 5 ^ (ScrapTier - 1)))\n    if D == true then\n        return GenerateCommaValue(string.format(\"%.0f\", E), false)\n    else\n        return E\n    end\nend\nfunction getRepairTime(C, F)\n    F = F or false;\n    C = C - SkillRepairToolOptimization * 0.05 * C;\n    local E = math.ceil(C / ScrapTierRepairTimes[ScrapTier])\n    E = E - SkillRepairToolEfficiency * 0.1 * E;\n    if F == true then\n        return GetSecondsString(string.format(\"%.0f\", E))\n    else\n        return E\n    end\nend\nfunction UpdateDataDamageoutline()\n    dmgoElements = {}\n    for g, G in ipairs(brokenElements) do\n        if #dmgoElements < DMGOMaxElements then\n            local elementPosition = vec3(G.pos)\n            local H = elementPosition.x - coreWorldOffset;\n            local I = elementPosition.y - coreWorldOffset;\n            local J = elementPosition.z - coreWorldOffset;\n            if H < ShipXmin then ShipXmin = H end\n            if I < ShipYmin then ShipYmin = I end\n            if J < ShipZmin then ShipZmin = J end\n            if H > ShipXmax then ShipXmax = H end\n            if I > ShipYmax then ShipYmax = I end\n            if J > ShipZmax then ShipZmax = J end\n            table.insert(dmgoElements, {\n                id = G.id,\n                type = \"b\",\n                size = G.maxhp,\n                x = H,\n                y = I,\n                z = J,\n                xp = 0,\n                yp = 0,\n                zp = 0,\n                u = 0,\n                v = 0\n            })\n        end\n    end\n    if #dmgoElements < DMGOMaxElements then\n        for g, G in ipairs(damagedElements) do\n            if #dmgoElements < DMGOMaxElements then\n                local elementPosition = vec3(G.pos)\n                local H = elementPosition.x - coreWorldOffset;\n                local I = elementPosition.y - coreWorldOffset;\n                local J = elementPosition.z - coreWorldOffset;\n                if H < ShipXmin then ShipXmin = H end\n                if I < ShipYmin then ShipYmin = I end\n                if J < ShipZmin then ShipZmin = J end\n                if H > ShipXmax then ShipXmax = H end\n                if I > ShipYmax then ShipYmax = I end\n                if J > ShipZmax then ShipZmax = J end\n                table.insert(dmgoElements, {\n                    id = G.id,\n                    type = \"d\",\n                    size = G.maxhp,\n                    x = H,\n                    y = I,\n                    z = J,\n                    xp = 0,\n                    yp = 0,\n                    zp = 0,\n                    u = 0,\n                    v = 0\n                })\n            end\n        end\n    end\n    if #dmgoElements < DMGOMaxElements then\n        for g, G in ipairs(healthyElements) do\n            if #dmgoElements < DMGOMaxElements then\n                local elementPosition = vec3(G.pos)\n                local H = elementPosition.x - coreWorldOffset;\n                local I = elementPosition.y - coreWorldOffset;\n                local J = elementPosition.z - coreWorldOffset;\n                if H < ShipXmin then ShipXmin = H end\n                if I < ShipYmin then ShipYmin = I end\n                if J < ShipZmin then ShipZmin = J end\n                if H > ShipXmax then ShipXmax = H end\n                if I > ShipYmax then ShipYmax = I end\n                if J > ShipZmax then ShipZmax = J end\n                table.insert(dmgoElements, {\n                    id = G.id,\n                    type = \"h\",\n                    size = G.maxhp,\n                    x = H,\n                    y = I,\n                    z = J,\n                    xp = 0,\n                    yp = 0,\n                    zp = 0,\n                    u = 0,\n                    v = 0\n                })\n            end\n        end\n    end\n    ShipX = math.abs(ShipXmax - ShipXmin)\n    ShipY = math.abs(ShipYmax - ShipYmin)\n    ShipZ = math.abs(ShipZmax - ShipZmin)\n    for g, G in ipairs(dmgoElements) do\n        dmgoElements[g].xp = math.abs(100 / (ShipXmax - ShipXmin) *\n                                          (G.x - ShipXmin))\n        dmgoElements[g].yp = math.abs(100 / (ShipYmax - ShipYmin) *\n                                          (G.y - ShipYmin))\n        dmgoElements[g].zp = math.abs(100 / (ShipZmax - ShipZmin) *\n                                          (G.z - ShipZmin))\n    end\nend\nfunction UpdateViewDamageoutline(K)\n    UFrame = 40;\n    VFrame = 40;\n    UStart = 20 + UFrame;\n    VStart = 180 + VFrame;\n    UDim = 1880 - 2 * UFrame;\n    VDim = 840 - 2 * VFrame;\n    if K.submode == \"top\" then\n        if DMGOStretch == false then\n            local L = UDim / (ShipYmax - ShipYmin)\n            local M = VDim / (ShipXmax - ShipXmin)\n            if L >= M then\n                local N = L / M;\n                local O = math.floor(UDim / N)\n                UStart = UStart + (UDim - O) / 2;\n                for g, G in ipairs(dmgoElements) do\n                    dmgoElements[g].u = math.floor(\n                                            UDim / 100 / N * G.yp + UStart)\n                    dmgoElements[g].v = math.floor(VDim / 100 * G.xp + VStart)\n                end\n            else\n                local N = M / L;\n                local P = math.floor(VDim / N)\n                VStart = VStart + (VDim - P) / 2;\n                for g, G in ipairs(dmgoElements) do\n                    dmgoElements[g].u = math.floor(UDim / 100 * G.yp + UStart)\n                    dmgoElements[g].v = math.floor(\n                                            VDim / 100 / N * G.xp + VStart)\n                end\n            end\n        else\n            for g, G in ipairs(dmgoElements) do\n                dmgoElements[g].u = math.floor(UDim / 100 * G.yp + UStart)\n                dmgoElements[g].v = math.floor(VDim / 100 * G.xp + VStart)\n            end\n        end\n    elseif K.submode == \"front\" then\n        if DMGOStretch == false then\n            local L = UDim / (ShipXmax - ShipXmin)\n            local M = VDim / (ShipZmax - ShipZmin)\n            if L >= M then\n                local N = L / M;\n                local O = math.floor(UDim / N)\n                UStart = UStart + (UDim - O) / 2;\n                for g, G in ipairs(dmgoElements) do\n                    dmgoElements[g].u = math.floor(\n                                            UDim / 100 / N * G.xp + UStart)\n                    dmgoElements[g].v = math.floor(\n                                            VDim / 100 * (100 - G.zp) + VStart)\n                end\n            else\n                local N = M / L;\n                local P = math.floor(VDim / N)\n                VStart = VStart + (VDim - P) / 2;\n                for g, G in ipairs(dmgoElements) do\n                    dmgoElements[g].u = math.floor(UDim / 100 * G.xp + UStart)\n                    dmgoElements[g].v = math.floor(\n                                            VDim / 100 / N * (100 - G.zp) +\n                                                VStart)\n                end\n            end\n        else\n            for g, G in ipairs(dmgoElements) do\n                dmgoElements[g].u = math.floor(UDim / 100 * G.xp + UStart)\n                dmgoElements[g].v = math.floor(\n                                        VDim / 100 * (100 - G.zp) + VStart)\n            end\n        end\n    elseif K.submode == \"side\" then\n        if DMGOStretch == false then\n            local L = UDim / (ShipYmax - ShipYmin)\n            local M = VDim / (ShipXmax - ShipZmin)\n            if L >= M then\n                local N = L / M;\n                local O = math.floor(UDim / N)\n                UStart = UStart + (UDim - O) / 2;\n                for g, G in ipairs(dmgoElements) do\n                    dmgoElements[g].u = math.floor(\n                                            UDim / 100 / N * G.yp + UStart)\n                    dmgoElements[g].v = math.floor(\n                                            VDim / 100 * (100 - G.zp) + VStart)\n                end\n            else\n                local N = M / L;\n                local P = math.floor(VDim / N)\n                VStart = VStart + (VDim - P) / 2;\n                for g, G in ipairs(dmgoElements) do\n                    dmgoElements[g].u = math.floor(UDim / 100 * G.yp + UStart)\n                    dmgoElements[g].v = math.floor(\n                                            VDim / 100 / N * (100 - G.zp) +\n                                                VStart)\n                end\n            end\n        else\n            for g, G in ipairs(dmgoElements) do\n                dmgoElements[g].u = math.floor(UDim / 100 * G.yp + UStart)\n                dmgoElements[g].v = math.floor(\n                                        VDim / 100 * (100 - G.zp) + VStart)\n            end\n        end\n    else\n        DrawCenteredText(\"ERROR: non-existing DMGO mode set.\")\n        PrintConsole(\"ERROR: non-existing DMGO mode set.\")\n        unit.exit()\n    end\nend\nfunction GetDamageoutlineShip()\n    local e = \"\"\n    for g, G in ipairs(dmgoElements) do\n        local Q = \"\"\n        local R = 1;\n        if G.type == \"h\" then\n            Q = \"ch\"\n        elseif G.type == \"d\" then\n            Q = \"cw\"\n        else\n            Q = \"cc\"\n        end\n        if G.id == highlightID then Q = \"f2\" end\n        if G.size > 0 and G.size < 1000 then\n            R = 5\n        elseif G.size >= 1000 and G.size < 2000 then\n            R = 8\n        elseif G.size >= 2000 and G.size < 5000 then\n            R = 12\n        elseif G.size >= 5000 and G.size < 10000 then\n            R = 15\n        elseif G.size >= 10000 and G.size < 20000 then\n            R = 20\n        elseif G.size >= 20000 then\n            R = 30\n        end\n        e = e .. [[<circle cx=]] .. G.u .. [[ cy=]] .. G.v .. [[ r=]] .. R ..\n                [[ class=]] .. Q .. [[ />]]\n        if G.id == highlightID then\n            e =\n                e .. [[<line class=daline x1=20 y1=]] .. G.v .. [[ x2=1900 y2=]] ..\n                    G.v .. [[ />]]\n            e =\n                e .. [[<line class=daline x1=]] .. G.u .. [[ y1=180 x2=]] .. G.u ..\n                    [[ y2=1020 />]]\n        end\n    end\n    return e\nend\nfunction GetContentClickareas(K)\n    local e = \"\"\n    if K ~= nil and K.ClickAreas ~= nil and #K.ClickAreas > 0 then\n        for g, S in ipairs(K.ClickAreas) do\n            e =\n                e .. [[<rect class=ll x=]] .. S.x1 .. [[ width=]] .. S.x2 - S.x1 ..\n                    [[ y=]] .. S.y1 .. [[ height=]] .. S.y2 - S.y1 .. [[ />]]\n        end\n    end\n    return e\nend\nfunction GetElement1(H, I, T, U)\n    H = H or 0;\n    I = I or 0;\n    T = T or 600;\n    U = U or 600;\n    local e = \"\"\n    e = e .. [[<svg x=\"]] .. H .. [[px\" y=\"]] .. I .. [[px\" width=\"]] .. T ..\n            [[px\" height=\"]] .. U .. [[px\" viewBox=\"0 0 200 200\">\n            <g>\n              <path fill=\"none\" stroke=\"#]] .. ColorTertiary ..\n            [[\" stroke-width=\"3\" stroke-miterlimit=\"10\" d=\"M138.768,100c0,21.411-17.356,38.768-38.768,38.768c-21.411,0-38.768-17.356-38.768-38.768c0-21.411,17.357-38.768,38.768-38.768\"/>\n              <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 100 100\" to=\"360 100 100\" dur=\"8s\" repeatCount=\"indefinite\"/>\n            </g>\n            <g>\n              <path fill=\"none\" stroke=\"#]] .. ColorTertiary ..\n            [[\" stroke-width=\"3\" stroke-miterlimit=\"10\" d=\"M132.605,100c0,18.008-14.598,32.605-32.605,32.605c-18.007,0-32.605-14.598-32.605-32.605c0-18.007,14.598-32.605,32.605-32.605\"/>\n              <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 100 100\" to=\"360 100 100\" dur=\"4s\" repeatCount=\"indefinite\"/>\n            </g>\n            <g>\n              <path fill=\"none\" stroke=\"#]] .. ColorTertiary ..\n            [[\" stroke-width=\"3\" stroke-miterlimit=\"10\" d=\"M126.502,100c0,14.638-11.864,26.502-26.502,26.502c-14.636,0-26.501-11.864-26.501-26.502c0-14.636,11.865-26.501,26.501-26.501\"/>\n              <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 100 100\" to=\"360 100 100\" dur=\"2s\" repeatCount=\"indefinite\"/>\n            </g>\n            <g>\n              <path fill=\"none\" stroke=\"#]] .. ColorTertiary ..\n            [[\" stroke-width=\"3\" stroke-miterlimit=\"10\" d=\"M120.494,100c0,11.32-9.174,20.494-20.494,20.494c-11.319,0-20.495-9.174-20.495-20.494c0-11.319,9.176-20.495,20.495-20.495\"/>\n              <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 100 100\" to=\"360 100 100\" dur=\"1s\" repeatCount=\"indefinite\"/>\n            </g>\n        </svg>]]\n    return e\nend\nfunction GetElement2(H, I)\n    H = H or 0;\n    I = I or 0;\n    local e = \"\"\n    e = e .. [[<svg x=\"]] .. H .. [[\" y=\"]] .. I ..\n            [[\"><rect class=\"f\" y=\"13.25\" width=\"1356.84\" height=\"1.96\"/><rect class=\"f\" x=\"49.27\" y=\"12.27\" width=\"44.12\" height=\"3.93\"/><rect class=\"f\" x=\"142.33\" y=\"10.3\" width=\"109.16\" height=\"7.85\"/><rect class=\"f\" x=\"320.08\" y=\"10.3\" width=\"32.52\" height=\"7.85\"/><rect class=\"f\" x=\"379.01\" y=\"12.27\" width=\"106.26\" height=\"3.93\"/><rect class=\"f\" x=\"565.14\" y=\"12.27\" width=\"15.78\" height=\"3.93\"/><rect class=\"f\" x=\"607.64\" y=\"12.27\" width=\"63.44\" height=\"3.93\"/><rect class=\"f\" x=\"692.98\" y=\"13.25\" width=\"15.14\" height=\"1.96\"/><rect class=\"f\" x=\"743.53\" y=\"12.27\" width=\"68.59\" height=\"3.93\"/><rect class=\"f\" x=\"877.17\" y=\"10.3\" width=\"86.62\" height=\"7.85\"/><rect class=\"f\" x=\"992.13\" y=\"12.27\" width=\"56.35\" height=\"3.93\"/><rect class=\"f\" x=\"1092.6\" y=\"10.3\" width=\"40.9\" height=\"7.85\"/><rect class=\"f\" x=\"1172.14\" y=\"12.27\" width=\"11.59\" height=\"3.93\"/><rect class=\"f\" x=\"1202.08\" y=\"12.27\" width=\"40.25\" height=\"3.93\"/><rect class=\"f\" x=\"1260.69\" y=\"13.25\" width=\"12.83\" height=\"1.96\"/><rect class=\"f\" x=\"1306.74\" y=\"10.3\" width=\"28.98\" height=\"7.85\"/><rect class=\"f\" x=\"16.58\" y=\"1.47\" width=\"122.21\" height=\"1.96\"/><rect class=\"f\" x=\"158.11\" y=\"23.06\" width=\"38.8\" height=\"1.96\"/><rect class=\"f\" x=\"209.79\" y=\"1.47\" width=\"12.56\" height=\"1.96\"/><rect class=\"f\" x=\"251.49\" width=\"66.01\" height=\"1.96\"/><rect class=\"f\" x=\"341.66\" width=\"26.57\" height=\"1.96\"/><rect class=\"f\" x=\"432.14\" y=\"23.06\" width=\"106.91\" height=\"1.96\"/><rect class=\"f\" x=\"584.14\" y=\"23.06\" width=\"23.51\" height=\"1.96\"/><rect class=\"f\" x=\"637.27\" y=\"23.06\" width=\"11.11\" height=\"1.96\"/><rect class=\"f\" x=\"625.69\" width=\"79.68\" height=\"1.96\"/><rect class=\"f\" x=\"732.91\" width=\"38.64\" height=\"1.96\"/><rect class=\"f\" x=\"823.23\" y=\"23.06\" width=\"68.19\" height=\"1.96\"/><rect class=\"f\" x=\"914.76\" y=\"23.06\" width=\"81.03\" height=\"1.96\"/><rect class=\"f\" x=\"1023.69\" y=\"23.06\" width=\"18.35\" height=\"1.96\"/><rect class=\"f\" x=\"1056.05\" width=\"35.32\" height=\"1.96\"/><rect class=\"f\" x=\"1113.05\" width=\"28.98\" height=\"1.96\"/><rect class=\"f\" x=\"1213.09\" width=\"93.65\" height=\"1.96\"/><rect class=\"f\" x=\"1249.26\" y=\"26.5\" width=\"37.19\" height=\"1.96\"/></svg>]]\n    return e\nend\nfunction GetElementLogo(H, I, V, W, X)\n    H = H or 812;\n    I = I or 380;\n    V = V or \"f\"\n    W = W or \"f2\"\n    X = X or \"f3\"\n    local e = \"\"\n    e = e .. [[\n        <svg x=\"]] .. H .. [[\" y=\"]] .. I .. [[\">\n          <g>\n            <g>\n                <path class=\"]] .. X ..\n            [[\" d=\"M909.49,556l0,.63a9.39,9.39,0,0,0-.07,1.37c0,1-.07,2-.07,2H813l.14-5.73c0-1.43.12-2.86.21-3.94s.13-1.79.13-1.79Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. X ..\n            [[\" d=\"M910.2,550.62s-.05.24-.11.61-.19.84-.23,1.34c-.11,1-.25,2-.25,2l-95.72-10.2.72-5.71c.18-1.43.47-2.84.65-3.91s.31-1.78.31-1.78Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. X ..\n            [[\" d=\"M911.46,545.36s-.25,1-.54,1.9l-.44,1.93-94.07-20.42s.63-2.82,1.32-5.62,1.57-5.56,1.57-5.56Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. X ..\n            [[\" d=\"M913.28,540.28s-.34.93-.71,1.84a12.07,12.07,0,0,0-.46,1.28l-.2.58L820.6,513.53s.23-.69.58-1.71.8-2.4,1.35-3.74l2.13-5.36Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. X ..\n            [[\" d=\"M1007.3,578.3a18.4,18.4,0,0,0,.67-1.85c.16-.46.32-.93.45-1.28s.16-.59.16-.59l92.23,27.53-.5,1.74c-.35,1-.81,2.39-1.26,3.76-.9,2.75-2,5.43-2,5.43Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. X ..\n            [[\" d=\"M1002.33,587.93s.53-.85,1.08-1.67,1-1.73,1-1.73l84.19,46.67-2.87,5-3.1,4.85Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. X ..\n            [[\" d=\"M999.09,592.32s.62-.78,1.23-1.57a12.58,12.58,0,0,0,.81-1.1l.36-.51,78.71,55.41s-.41.59-1,1.47-1.45,2.05-2.35,3.17-1.78,2.27-2.45,3.11l-1.12,1.41Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. X ..\n            [[\" d=\"M934.59,516.17a19.52,19.52,0,0,0-1.7,1l-1.15.73-.51.36-54.77-79.15,1.47-1,3.33-2.15c2.4-1.58,4.92-3,4.92-3Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. X ..\n            [[\" d=\"M939.41,513.7l-.56.26a12.84,12.84,0,0,0-1.23.58c-.87.46-1.77.89-1.77.89l-46-84.56,5.13-2.64c1.28-.67,2.6-1.25,3.58-1.7l1.65-.75Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. X ..\n            [[\" d=\"M949.68,510.38s-1,.24-1.92.45a13.32,13.32,0,0,0-1.31.35l-.6.17-26.78-92.46,1.73-.49c1.05-.29,2.43-.7,3.84-1l5.63-1.29Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. X ..\n            [[\" d=\"M935.2,604.24l.53.32c.32.19.78.38,1.22.62s.87.46,1.2.62l.57.25-40.51,87.32-1.64-.76c-1-.46-2.26-1.13-3.54-1.78s-2.57-1.31-3.52-1.84L888,688.1Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. X ..\n            [[\" d=\"M930.61,601.32l.51.36a11.48,11.48,0,0,0,1.13.77l1.15.74a6.12,6.12,0,0,0,.52.33L884.26,686s-.62-.36-1.53-1l-3.34-2.13c-1.22-.77-2.4-1.59-3.27-2.22l-1.47-1Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. X ..\n            [[\" d=\"M985,515.92a18,18,0,0,0-1.74-.95l-1.21-.63-.57-.25,40.84-87.17,1.63.76,3.54,1.8c2.58,1.28,5.06,2.74,5.06,2.74Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. X ..\n            [[\" d=\"M989.55,518.85l-.51-.36c-.31-.21-.69-.53-1.12-.77-.85-.53-1.67-1.08-1.67-1.08l50-82.28,4.85,3.1c1.22.76,2.38,1.61,3.27,2.23l1.46,1Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. X ..\n            [[\" d=\"M997.69,526.13a3.89,3.89,0,0,0-.43-.46l-1-1a11,11,0,0,0-1-1l-.45-.43,66.29-69.8,1.3,1.24c.78.74,1.81,1.75,2.79,2.8l2.73,2.86c.74.78,1.21,1.32,1.21,1.32Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 147 147\" to=\"360 147 147\" dur=\"15s\" repeatCount=\"indefinite\"/>\n            </g>\n            <g>\n                <path class=\"]] .. X ..\n            [[\" d=\"M985,515.92a18,18,0,0,0-1.74-.95l-1.21-.63-.57-.25,40.84-87.17,1.63.76,3.54,1.8c2.58,1.28,5.06,2.74,5.06,2.74Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. X ..\n            [[\" d=\"M939.41,513.7l-.56.26a12.84,12.84,0,0,0-1.23.58c-.87.46-1.77.89-1.77.89l-46-84.56,5.13-2.64c1.28-.67,2.6-1.25,3.58-1.7l1.65-.75Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. X ..\n            [[\" d=\"M910.2,550.62s-.05.24-.11.61-.19.84-.23,1.34c-.11,1-.25,2-.25,2l-95.72-10.2.72-5.71c.18-1.43.47-2.84.65-3.91s.31-1.78.31-1.78Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. X ..\n            [[\" d=\"M930.61,601.32l.51.36a11.48,11.48,0,0,0,1.13.77l1.15.74a6.12,6.12,0,0,0,.52.33L884.26,686s-.62-.36-1.53-1l-3.34-2.13c-1.22-.77-2.4-1.59-3.27-2.22l-1.47-1Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"360 147 147\" to=\"0 147 147\" dur=\"8s\" repeatCount=\"indefinite\"/>\n            </g>\n            <g>\n                <path class=\"]] .. V ..\n            [[\" d=\"M873.15,471.64l-.37.36c-.25.22-.6.57-1,1l-3.57,3.76a128.19,128.19,0,0,0-9.79,12.31c-.85,1.16-1.64,2.35-2.39,3.54s-1.52,2.35-2.21,3.5c-1.33,2.34-2.64,4.47-3.59,6.41s-1.82,3.49-2.32,4.65l-.81,1.79-21-9.49s.36-.77,1-2.13,1.6-3.24,2.76-5.51,2.67-4.84,4.26-7.6c.81-1.36,1.72-2.74,2.62-4.15s1.83-2.83,2.82-4.2a153.32,153.32,0,0,1,11.61-14.59c1.74-1.86,3.21-3.39,4.23-4.45.51-.54.93-.95,1.22-1.23l.43-.42Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. V ..\n            [[\" d=\"M985.66,438.77s-.7-.17-1.93-.39-3-.55-5.12-.89a126.07,126.07,0,0,0-15.67-1.33c-2.85-.12-5.71,0-8.38.06s-5.18.36-7.31.52l-5.15.65c-.63.08-1.11.15-1.44.22l-.51.08L936.48,415l.61-.1c.39-.08,1-.16,1.7-.26l6.11-.76c2.53-.21,5.49-.49,8.66-.62s6.54-.22,9.92-.08A149,149,0,0,1,982,414.73c2.52.4,4.61.79,6.07,1.06s2.3.45,2.3.45Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. V ..\n            [[\" d=\"M1077.65,521l-.64-1.87c-.38-1.2-1-2.87-1.82-4.87a122.77,122.77,0,0,0-6.73-14.25,127.15,127.15,0,0,0-8.49-13.26c-1.25-1.75-2.4-3.12-3.16-4.11l-1.22-1.54,17.74-14.66,1.45,1.82c.91,1.18,2.27,2.81,3.75,4.88a149,149,0,0,1,10.06,15.71,144.75,144.75,0,0,1,8,16.91c1,2.37,1.71,4.36,2.16,5.78l.76,2.22Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. V ..\n            [[\" d=\"M1083,574.9s.09-.71.24-1.95.25-3,.41-5.17.18-4.64.26-7.31c0-1.34,0-2.72-.08-4.13s-.06-2.83-.19-4.26-.22-2.85-.33-4.25-.33-2.78-.49-4.11c-.3-2.67-.8-5.14-1.17-7.25s-.84-3.86-1.1-5.08-.45-1.92-.45-1.92l22.31-5.67s.2.83.54,2.28.87,3.52,1.3,6,1,5.44,1.39,8.6c.19,1.58.42,3.21.58,4.87s.26,3.35.39,5,.18,3.38.23,5,.09,3.3.08,4.89c-.08,3.16-.08,6.12-.29,8.65s-.34,4.65-.49,6.13-.28,2.31-.28,2.31Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. V ..\n            [[\" d=\"M1018,669.57l.46-.23c.3-.16.74-.38,1.28-.7l4.5-2.59a128.6,128.6,0,0,0,12.89-9l1.69-1.33,1.61-1.39c1.06-.92,2.12-1.82,3.11-2.72,1.93-1.86,3.8-3.53,5.26-5.11,3-3.07,4.83-5.27,4.83-5.27L1071,656.3s-2.18,2.6-5.73,6.24c-1.73,1.86-3.93,3.86-6.23,6.05-1.18,1.07-2.43,2.14-3.69,3.23l-1.91,1.64-2,1.58a152.35,152.35,0,0,1-15.29,10.69l-5.34,3.07c-.64.38-1.16.65-1.51.83l-.55.28Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. V ..\n            [[\" d=\"M854.89,625.68l1.06,1.66c.34.53.75,1.17,1.23,1.9l1.68,2.4a126.18,126.18,0,0,0,9.88,12.24,130,130,0,0,0,11.36,10.88c1.61,1.41,3.07,2.46,4,3.25l1.55,1.21-13.81,18.42L870,676.21c-1.15-.94-2.86-2.19-4.78-3.87a150.72,150.72,0,0,1-13.45-12.89A145.71,145.71,0,0,1,840.09,645c-.74-1-1.41-2-2-2.84s-1.05-1.63-1.46-2.25c-.8-1.25-1.25-2-1.25-2Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. V ..\n            [[\" d=\"M836.93,574.52l.25,2c.08.62.18,1.38.29,2.24s.32,1.84.5,2.9l.62,3.41c.27,1.2.56,2.47.86,3.78.56,2.63,1.43,5.37,2.21,8.13.93,2.72,1.77,5.47,2.8,8,.5,1.25,1,2.46,1.44,3.6s1,2.19,1.43,3.17c.86,2,1.69,3.56,2.26,4.67s.9,1.76.9,1.76l-20.33,10.79-1.07-2.08c-.68-1.32-1.66-3.21-2.69-5.55l-1.68-3.76c-.57-1.34-1.13-2.78-1.71-4.27-1.22-3-2.24-6.2-3.33-9.43-.93-3.27-1.95-6.53-2.62-9.65-.35-1.56-.7-3.06-1-4.49l-.74-4c-.22-1.26-.42-2.41-.59-3.43s-.25-1.92-.35-2.66c-.19-1.47-.29-2.31-.29-2.31Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. V ..\n            [[\" d=\"M912.27,674.43l1.83.73c1.18.44,2.82,1.16,4.87,1.83s4.4,1.52,7,2.21,5.38,1.42,8.18,2a123,123,0,0,0,15.58,2.27c2.14.16,3.92.32,5.17.33l2,0-.57,23-2.33-.06c-1.47,0-3.59-.2-6.12-.39a146.55,146.55,0,0,1-18.48-2.69c-3.32-.75-6.64-1.51-9.7-2.43s-5.9-1.81-8.31-2.63-4.39-1.65-5.78-2.17l-2.17-.87Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. V ..\n            [[\" d=\"M965.68,683.83s.72,0,2-.11l5.17-.41a125.38,125.38,0,0,0,15.53-2.63c2.81-.6,5.55-1.45,8.14-2.18s4.94-1.61,7-2.38l4.84-1.91,1.8-.8,9.31,21.05-2.14.95-5.74,2.27c-2.38.9-5.22,1.84-8.25,2.82s-6.33,1.87-9.66,2.59a151.67,151.67,0,0,1-18.43,3.12c-2.53.23-4.64.38-6.12.49s-2.32.13-2.32.13Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"360 147 147\" to=\"0 147 147\" dur=\"100s\" repeatCount=\"indefinite\"/>\n            </g>\n            <g>\n                <path class=\"]] .. W ..\n            [[\" d=\"M930,519.2a3.27,3.27,0,0,0-.5.37l-1.28,1c-1,.85-2.4,2-3.7,3.3-.66.61-1.23,1.31-1.84,1.9s-1.06,1.24-1.52,1.74-.76,1-1,1.27l-.38.49L881.5,500l.74-.95c.49-.59,1.12-1.48,2-2.46s1.84-2.17,2.95-3.37,2.3-2.48,3.57-3.69c2.5-2.45,5.13-4.75,7.17-6.39l2.49-2c.59-.48,1-.72,1-.72Z\" transform=\"translate(-813.04 -413.09)\"/>            \n                <path class=\"]] .. W ..\n            [[\" d=\"M977.4,512.38s-.85-.25-2.11-.71c-.63-.2-1.39-.38-2.19-.63s-1.68-.37-2.54-.61-1.76-.3-2.58-.47l-2.28-.3c-.66-.12-1.24-.09-1.63-.14l-.61,0,3.18-48,1.2.09c.76.08,1.86.1,3.16.28s2.82.34,4.43.59,3.34.57,5.05.93,3.42.75,5,1.19,3.06.85,4.31,1.25l4.13,1.4Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. W ..\n            [[\" d=\"M959.68,509.35l-1.08,0-1.1,0c-.4,0-.83.07-1.25.1a22.56,22.56,0,0,0-2.34.22l-1,.13-6.67-47.67,2-.26c1.23-.18,2.88-.31,4.53-.43.83-.05,1.65-.14,2.43-.17l2.11-.05,2.07,0Z\" transform=\"translate(-813.04 -413.09)\"/>            \n                <path class=\"]] .. W ..\n            [[\" d=\"M1009.87,551s0-.22-.1-.61a13.68,13.68,0,0,0-.34-1.58c-.16-.65-.28-1.42-.55-2.21s-.43-1.67-.76-2.5c-.14-.42-.28-.85-.41-1.26s-.33-.81-.47-1.2c-.3-.78-.58-1.51-.88-2.11l-.66-1.47-.29-.55L1048.49,516l.55,1.07c.31.7.76,1.69,1.31,2.89s1.13,2.6,1.72,4.13c.29.77.63,1.54.9,2.36s.56,1.64.84,2.47c.6,1.64,1,3.33,1.49,4.91s.77,3.07,1.08,4.34.54,2.34.65,3.1l.22,1.18Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. W ..\n            [[\" d=\"M1003.64,534.22a7.16,7.16,0,0,0-.56-.91c-.36-.52-.77-1.27-1.27-1.95s-1-1.41-1.37-1.9l-.67-.84,37.74-29.87,1.28,1.62c.77,1,1.69,2.35,2.66,3.69s1.8,2.77,2.49,3.81,1.07,1.76,1.07,1.76Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. W ..\n            [[\" d=\"M1009.26,572s.06-.23.15-.64.27-1,.36-1.69a48.31,48.31,0,0,0,.72-5.21c.06-1,.18-1.92.16-2.84s.08-1.76,0-2.49,0-1.34,0-1.76-.06-.66-.06-.66l48-3.06s0,.47.1,1.28,0,2,.08,3.39,0,3,0,4.78-.18,3.61-.32,5.48a100.31,100.31,0,0,1-1.4,10.17c-.22,1.38-.53,2.51-.7,3.31s-.29,1.25-.29,1.25Z\" transform=\"translate(-813.04 -413.09)\"/>            \n                <path class=\"]] .. W ..\n            [[\" d=\"M977.17,607.75a55.37,55.37,0,0,0,6.51-2.89c.81-.38,1.55-.89,2.29-1.28s1.37-.89,1.94-1.23,1-.72,1.34-.93l.51-.36L1018.07,640l-1,.7c-.63.43-1.49,1.11-2.6,1.8s-2.38,1.56-3.79,2.39-2.91,1.73-4.47,2.52c-3.09,1.63-6.28,3.08-8.7,4.08l-2.95,1.16a11.58,11.58,0,0,1-1.12.41Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. W ..\n            [[\" d=\"M956.34,610.57a21.57,21.57,0,0,0,2.42.12l1.18,0,1.31,0,1.41,0,1.43-.12a52,52,0,0,0,7.56-1.17l11,46.86-1.25.29-1.44.33-1.88.34c-1.38.24-3,.57-4.72.75s-3.59.48-5.45.58l-2.78.21-2.7.07-2.52.06-2.26-.06c-2.81,0-4.67-.22-4.67-.22Z\" transform=\"translate(-813.04 -413.09)\"/>            \n                <path class=\"]] .. W ..\n            [[\" d=\"M913.63,580.53a50,50,0,0,0,3.35,6.31c.5.74.94,1.53,1.46,2.19s.91,1.35,1.36,1.86.76,1,1,1.29.41.47.41.47l-36.81,31-.78-.92-2-2.49c-.83-1-1.69-2.28-2.65-3.61s-1.88-2.81-2.83-4.28A97.28,97.28,0,0,1,869.63,600Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. W ..\n            [[\" d=\"M943.81,608.07l1.1.39c.68.17,1.57.43,2.47.7s1.82.42,2.51.57l1.16.19-8.41,47.39-2.25-.4c-1.35-.28-3.13-.72-4.92-1.12l-4.86-1.37-2.17-.74Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <path class=\"]] .. W ..\n            [[\" d=\"M909.3,560s.06,1,.07,2.43c0,.72.11,1.57.18,2.47s.25,1.84.33,2.8l.5,2.76c.23.86.39,1.68.56,2.37.41,1.37.64,2.29.64,2.29l-46,14.31L864.35,585c-.33-1.35-.68-3-1.08-4.66s-.66-3.55-1-5.39-.5-3.7-.66-5.45-.27-3.37-.34-4.77l-.12-4.67Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 147 147\" to=\"360 147 147\" dur=\"45s\" repeatCount=\"indefinite\"/>\n            </g>\n            <g>\n                <path class=\"]] .. W ..\n            [[\" d=\"M909.3,560s.06,1,.07,2.43c0,.72.11,1.57.18,2.47s.25,1.84.33,2.8l.5,2.76c.23.86.39,1.68.56,2.37.41,1.37.64,2.29.64,2.29l-46,14.31L864.35,585c-.33-1.35-.68-3-1.08-4.66s-.66-3.55-1-5.39-.5-3.7-.66-5.45-.27-3.37-.34-4.77l-.12-4.67Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 147 147\" to=\"360 147 147\" dur=\"4s\" repeatCount=\"indefinite\"/>\n            </g>\n            <g>\n                <path class=\"]] .. W ..\n            [[\" d=\"M909.3,560s.06,1,.07,2.43c0,.72.11,1.57.18,2.47s.25,1.84.33,2.8l.5,2.76c.23.86.39,1.68.56,2.37.41,1.37.64,2.29.64,2.29l-46,14.31L864.35,585c-.33-1.35-.68-3-1.08-4.66s-.66-3.55-1-5.39-.5-3.7-.66-5.45-.27-3.37-.34-4.77l-.12-4.67Z\" transform=\"translate(-813.04 -413.09)\"/>\n                <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"360 147 147\" to=\"0 147 147\" dur=\"12s\" repeatCount=\"indefinite\"/>\n            </g>\n          </g>\n        </svg>]]\n    return e\nend\nfunction GetHeader(Y)\n    Y = Y or \"ERROR: UNDEFINED\"\n    local e = \"\"\n    e = e ..\n            [[<path class=\"f\" d=\"M1920,582v-2.42H1820l-3.71,4.66h-49.75l-4.65-4.66H1572.63L1519,526H1462.8l-2.84-6H1154l-6,6H0v74.06H28.43l5.4,5.4H260.42l2.78-5.4H490.58l3.66-4.58H788.61l4.58,4.58h574.75l8.91-11.16h119L1507,600.08h405.19v0l7.77-.1V582.81h-3.22V582Zm-7.77,14.87-.13,0h.13Z\" transform=\"translate(0 -520.01)\"/>\n            <text class=\"f50sxx\" x=\"40\" y=\"60\">]] .. Y .. [[</text>]]\n    return e\nend\nfunction GetContentBackground(Z, _)\n    bgColor = ColorBackgroundPattern;\n    local e = \"\"\n    if Z == \"dots\" then\n        e =\n            [[background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='4' height='4' viewBox='0 0 4 4'%3E%3Cpath fill='%23]] ..\n                bgColor .. [[' fill-opacity=']] .. BackgroundModeOpacity ..\n                [[' d='M1 3h1v1H1V3zm2-2h1v1H3V1z'%3E%3C/path%3E%3C/svg%3E\");]]\n    elseif Z == \"rain\" then\n        e =\n            [[background-image: url(\"data:image/svg+xml,%3Csvg width='12' height='16' viewBox='0 0 12 16' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M4 .99C4 .445 4.444 0 5 0c.552 0 1 .45 1 .99v4.02C6 5.555 5.556 6 5 6c-.552 0-1-.45-1-.99V.99zm6 8c0-.546.444-.99 1-.99.552 0 1 .45 1 .99v4.02c0 .546-.444.99-1 .99-.552 0-1-.45-1-.99V8.99z' fill='%23]] ..\n                bgColor .. [[' fill-opacity=']] .. BackgroundModeOpacity ..\n                [[' fill-rule='evenodd'/%3E%3C/svg%3E\");]]\n    elseif Z == \"plus\" then\n        e =\n            [[background-image: url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23]] ..\n                bgColor .. [[' fill-opacity=']] .. BackgroundModeOpacity ..\n                [['%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");]]\n    elseif Z == \"signal\" then\n        e =\n            [[background-image: url(\"data:image/svg+xml,%3Csvg width='84' height='48' viewBox='0 0 84 48' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 0h12v6H0V0zm28 8h12v6H28V8zm14-8h12v6H42V0zm14 0h12v6H56V0zm0 8h12v6H56V8zM42 8h12v6H42V8zm0 16h12v6H42v-6zm14-8h12v6H56v-6zm14 0h12v6H70v-6zm0-16h12v6H70V0zM28 32h12v6H28v-6zM14 16h12v6H14v-6zM0 24h12v6H0v-6zm0 8h12v6H0v-6zm14 0h12v6H14v-6zm14 8h12v6H28v-6zm-14 0h12v6H14v-6zm28 0h12v6H42v-6zm14-8h12v6H56v-6zm0-8h12v6H56v-6zm14 8h12v6H70v-6zm0 8h12v6H70v-6zM14 24h12v6H14v-6zm14-8h12v6H28v-6zM14 8h12v6H14V8zM0 8h12v6H0V8z' fill='%23]] ..\n                bgColor .. [[' fill-opacity=']] .. BackgroundModeOpacity ..\n                [[' fill-rule='evenodd'/%3E%3C/svg%3E\");]]\n    elseif Z == \"deathstar\" then\n        e =\n            [[background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='80' height='105' viewBox='0 0 80 105'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23]] ..\n                bgColor .. [[' fill-opacity=']] .. BackgroundModeOpacity ..\n                [['%3E%3Cpath d='M20 10a5 5 0 0 1 10 0v50a5 5 0 0 1-10 0V10zm15 35a5 5 0 0 1 10 0v50a5 5 0 0 1-10 0V45zM20 75a5 5 0 0 1 10 0v20a5 5 0 0 1-10 0V75zm30-65a5 5 0 0 1 10 0v50a5 5 0 0 1-10 0V10zm0 65a5 5 0 0 1 10 0v20a5 5 0 0 1-10 0V75zM35 10a5 5 0 0 1 10 0v20a5 5 0 0 1-10 0V10zM5 45a5 5 0 0 1 10 0v50a5 5 0 0 1-10 0V45zm0-35a5 5 0 0 1 10 0v20a5 5 0 0 1-10 0V10zm60 35a5 5 0 0 1 10 0v50a5 5 0 0 1-10 0V45zm0-35a5 5 0 0 1 10 0v20a5 5 0 0 1-10 0V10z' /%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");]]\n    elseif Z == \"diamond\" then\n        e =\n            [[background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='32' viewBox='0 0 16 32'%3E%3Cg fill='%23]] ..\n                bgColor .. [[' fill-opacity=']] .. BackgroundModeOpacity ..\n                [['%3E%3Cpath fill-rule='evenodd' d='M0 24h4v2H0v-2zm0 4h6v2H0v-2zm0-8h2v2H0v-2zM0 0h4v2H0V0zm0 4h2v2H0V4zm16 20h-6v2h6v-2zm0 4H8v2h8v-2zm0-8h-4v2h4v-2zm0-20h-6v2h6V0zm0 4h-4v2h4V4zm-2 12h2v2h-2v-2zm0-8h2v2h-2V8zM2 8h10v2H2V8zm0 8h10v2H2v-2zm-2-4h14v2H0v-2zm4-8h6v2H4V4zm0 16h6v2H4v-2zM6 0h2v2H6V0zm0 24h2v2H6v-2z'/%3E%3C/g%3E%3C/svg%3E\");]]\n    elseif Z == \"hexagon\" then\n        e =\n            [[background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='28' height='49' viewBox='0 0 28 49'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='hexagons' fill='%23]] ..\n                bgColor .. [[' fill-opacity=']] .. BackgroundModeOpacity ..\n                [[' fill-rule='nonzero'%3E%3Cpath d='M13.99 9.25l13 7.5v15l-13 7.5L1 31.75v-15l12.99-7.5zM3 17.9v12.7l10.99 6.34 11-6.35V17.9l-11-6.34L3 17.9zM0 15l12.98-7.5V0h-2v6.35L0 12.69v2.3zm0 18.5L12.98 41v8h-2v-6.85L0 35.81v-2.3zM15 0v7.5L27.99 15H28v-2.31h-.01L17 6.35V0h-2zm0 49v-8l12.99-7.5H28v2.31h-.01L17 42.15V49h-2z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");]]\n    elseif Z == \"capsule\" then\n        e =\n            [[background-image: url(\"data:image/svg+xml,%3Csvg width='32' height='26' viewBox='0 0 32 26' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M14 0v3.994C14 7.864 10.858 11 7 11c-3.866 0-7-3.138-7-7.006V0h2v4.005C2 6.765 4.24 9 7 9c2.756 0 5-2.236 5-4.995V0h2zm0 26v-5.994C14 16.138 10.866 13 7 13c-3.858 0-7 3.137-7 7.006V26h2v-6.005C2 17.235 4.244 15 7 15c2.76 0 5 2.236 5 4.995V26h2zm2-18.994C16 3.136 19.142 0 23 0c3.866 0 7 3.138 7 7.006v9.988C30 20.864 26.858 24 23 24c-3.866 0-7-3.138-7-7.006V7.006zm2-.01C18 4.235 20.244 2 23 2c2.76 0 5 2.236 5 4.995v10.01C28 19.765 25.756 22 23 22c-2.76 0-5-2.236-5-4.995V6.995z' fill='%23]] ..\n                bgColor .. [[' fill-opacity=']] .. BackgroundModeOpacity ..\n                [[' fill-rule='evenodd'/%3E%3C/svg%3E\");]]\n    elseif Z == \"diagonal\" then\n        e =\n            [[background-image: url(\"data:image/svg+xml,%3Csvg width='6' height='6' viewBox='0 0 6 6' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23]] ..\n                bgColor .. [[' fill-opacity=']] .. BackgroundModeOpacity ..\n                [[' fill-rule='evenodd'%3E%3Cpath d='M5 0h1L0 6V5zM6 5v1H5z'/%3E%3C/g%3E%3C/svg%3E\");]]\n    end\n    return e\nend\nfunction GetContentDamageHUDOutput()\n    local a0 = 300;\n    local a1 = 165;\n    if #damagedElements > 0 or #brokenElements > 0 then a1 = 510 end\n    local e = \"\"\n    e =\n        e .. [[<svg style=\"position:absolute;top:]] .. HUDShiftV .. [[; left:]] ..\n            HUDShiftU .. [[;\" viewBox=\"0 0 ]] .. a0 .. [[ ]] .. a1 ..\n            [[\" width=\"]] .. a0 .. [[\" height=\"]] .. a1 .. [[\">\n            <style>\n                .f22mxxxb { font-size: 22px; font-weight: bold; text-anchor: middle; fill: #]] ..\n            ColorTertiary .. [[; }\n                .f20mxxb { font-size: 20px; font-weight:bold; text-anchor: middle; fill: #]] ..\n            ColorSecondary .. [[; }\n                .f18sxx { font-size: 18px; text-anchor: start; fill: #]] ..\n            ColorSecondary .. [[; }\n                .f18exx { font-size: 18px; text-anchor: end; fill: #]] ..\n            ColorSecondary .. [[; }\n                .f18mh { font-size: 18px; text-anchor: middle; fill: #]] ..\n            ColorHealthy .. [[; }\n                .f18exxb { font-size: 18px; font-weight: bold; text-anchor: end; fill: #]] ..\n            ColorSecondary .. [[; }\n                .f15swb { font-size: 15px; font-weight: bold; text-anchor: start; fill:#]] ..\n            ColorWarning .. [[; }\n                .f15scb { font-size: 15px; font-weight: bold; text-anchor: start; fill:#]] ..\n            ColorCritical .. [[; }\n                .f15ewb { font-size: 15px; font-weight: bold; text-anchor: end; fill:#]] ..\n            ColorWarning .. [[; }\n                .f15ecb { font-size: 15px; font-weight: bold; text-anchor: end; fill:#]] ..\n            ColorCritical .. [[; }\n                .f15sxxxb { font-size: 15px; font-weight: bold; text-anchor: start; fill:#]] ..\n            ColorTertiary .. [[; }\n                .f15exxxb { font-size: 15px; font-weight: bold; text-anchor: end; fill:#]] ..\n            ColorTertiary .. [[; }\n                .f12mxx { font-size: 12px; fill: #]] .. ColorSecondary ..\n            [[; text-anchor: middle}\n                .xfill { fill:#]] .. ColorPrimary .. [[;}\n                .xline { stroke: #]] .. ColorPrimary .. [[; stroke-width: 1;}\n            </style>\n        ]]\n    e = e .. [[<rect stroke=#]] .. ColorPrimary ..\n            [[ stroke-width=2 x=0 y=0 rx=10 ry=10 width=\"]] .. a0 ..\n            [[\" height=\"]] .. a1 .. [[\" fill=#]] .. ColorBackground ..\n            [[ fill-opacity=0.6 />]] ..\n            [[<rect class=xfill x=0 x=0 y=0 rx=10 ry=10 width=300 height=30 />]] ..\n            [[<rect class=xfill x=0 x=0 y=5 rx=0 ry=0 width=300 height=30 />]] ..\n            [[<text x=150 y=24 class=\"f20mxxb\">]] ..\n            (YourShipsName == \"Enter here\" and \"Ship ID \" .. ShipID or\n                YourShipsName) .. [[</text>]] ..\n            [[<circle cx=17 cy=17 r=10 stroke=#]] .. ColorBackground ..\n            [[ stroke-width=2 fill=none />]]\n    if #brokenElements > 0 then\n        e = e ..\n                [[<svg x=\"2px\" y=\"2px\" width=\"30px\" height=\"30px\" viewBox=\"0 0 50 50\"><path fill=\"#]] ..\n                ColorCritical ..\n                [[\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\"><animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"1s\" repeatCount=\"indefinite\"/></path></svg>]]\n    elseif #damagedElements > 0 then\n        e = e ..\n                [[<svg x=\"2px\" y=\"2px\" width=\"30px\" height=\"30px\" viewBox=\"0 0 50 50\"><path fill=\"#]] ..\n                ColorWarning ..\n                [[\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\"><animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"1s\" repeatCount=\"indefinite\"/></path></svg>]]\n    else\n        e = e ..\n                [[<svg x=\"2px\" y=\"2px\" width=\"30px\" height=\"30px\" viewBox=\"0 0 50 50\"><path fill=\"#]] ..\n                ColorHealthy ..\n                [[\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\"><animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"1s\" repeatCount=\"indefinite\"/></path></svg>]]\n    end\n    if #damagedElements > 0 or #brokenElements > 0 then\n        e = e .. [[<text x=10 y=55 class=\"f18sxx\">Total Damage</text>]] ..\n                [[<text x=290 y=55 class=\"f18exxb\">]] ..\n                GenerateCommaValue(string.format(\"%.0f\",\n                                                 totalShipMaxHP - totalShipHP)) ..\n                [[</text>]]\n        e = e .. [[<text x=10 y=75 class=\"f18sxx\">T]] .. ScrapTier ..\n                [[ Scrap Needed</text>]] ..\n                [[<text x=290 y=75 class=\"f18exxb\">]] ..\n                getScraps(totalShipMaxHP - totalShipHP, true) .. [[</text>]]\n        e = e .. [[<text x=10 y=95 class=\"f18sxx\">Repair Time</text>]] ..\n                [[<text x=290 y=95 class=\"f18exxb\">]] ..\n                getRepairTime(totalShipMaxHP - totalShipHP, true) .. [[</text>]]\n        e = e ..\n                [[<rect class=xfill x=0 y=105 rx=0 ry=0 width=300 height=40 />]] ..\n                [[<rect fill=#]] .. ColorHealthy .. [[ stroke=#]] ..\n                ColorTertiary ..\n                [[ stroke-width=1 x=10 y=110 rx=5 ry=5 width=90 height=30 />]] ..\n                [[<text x=55 y=132 class=\"f22mxxxb\">]] .. #healthyElements ..\n                [[</text>]] .. [[<rect fill=#]] .. ColorWarning .. [[ stroke=#]] ..\n                ColorTertiary ..\n                [[ stroke-width=1 x=105 y=110 rx=5 ry=5 width=90 height=30 />]] ..\n                [[<text x=150 y=132 class=\"f22mxxxb\">]] .. #damagedElements ..\n                [[</text>]] .. [[<rect fill=#]] .. ColorCritical ..\n                [[ stroke=#]] .. ColorTertiary ..\n                [[ stroke-width=1 x=200 y=110 rx=5 ry=5 width=90 height=30 />]] ..\n                [[<text x=245 y=132 class=\"f22mxxxb\">]] .. #brokenElements ..\n                [[</text>]]\n        local u = 0;\n        for a2 = hudStartIndex, hudStartIndex + 9, 1 do\n            if rE[a2] ~= nil then\n                v = rE[a2]\n                if v.hp > 0 then\n                    e = e .. [[<rect fill=#]] .. ColorWarning ..\n                            [[ fill-opacity=0.2 x=1 y=]] .. 147 + u * 26 ..\n                            [[ width=298 height=25 />]] .. [[<text x=10 y=]] ..\n                            165 + u * 26 .. [[ class=\"f15swb\">]] ..\n                            string.format(\"%.30s\", v.name) .. [[</text>]] ..\n                            [[<text x=290 y=]] .. 165 + u * 26 ..\n                            [[ class=\"f15ewb\">]] ..\n                            GenerateCommaValue(\n                                string.format(\"%.0f\", v.missinghp)) ..\n                            [[</text>]]\n                    if v.id == highlightID then\n                        e = e .. [[<rect fill=#]] .. ColorWarning ..\n                                [[ fill-opacity=1 x=1 y=]] .. 147 + u * 26 ..\n                                [[ width=298 height=25 />]] .. [[<text x=10 y=]] ..\n                                165 + u * 26 .. [[ class=\"f15sxxxb\">]] ..\n                                string.format(\"%.30s\", v.name) .. [[</text>]] ..\n                                [[<text x=290 y=]] .. 165 + u * 26 ..\n                                [[ class=\"f15exxxb\">]] ..\n                                GenerateCommaValue(\n                                    string.format(\"%.0f\", v.missinghp)) ..\n                                [[</text>]]\n                    end\n                else\n                    e = e .. [[<rect fill=#]] .. ColorCritical .. [[ x=1 y=]] ..\n                            147 + u * 26 ..\n                            [[ fill-opacity=0.2 width=298 height=25 />]] ..\n                            [[<text x=10 y=]] .. 165 + u * 26 ..\n                            [[ class=\"f15scb\">]] ..\n                            string.format(\"%.30s\", v.name) .. [[</text>]] ..\n                            [[<text x=290 y=]] .. 165 + u * 26 ..\n                            [[ class=\"f15ecb\">]] ..\n                            GenerateCommaValue(\n                                string.format(\"%.0f\", v.missinghp)) ..\n                            [[</text>]]\n                    if v.id == highlightID then\n                        highlightX = elementPosition.x - coreWorldOffset;\n                        highlightY = elementPosition.y - coreWorldOffset;\n                        highlightZ = elementPosition.z - coreWorldOffset;\n                        e = e .. [[<rect fill=#]] .. ColorCritical ..\n                                [[ x=1 y=]] .. 147 + u * 26 ..\n                                [[ fill-opacity=1 width=298 height=25 />]] ..\n                                [[<text x=10 y=]] .. 165 + u * 26 ..\n                                [[ class=\"f15sxxxb\">]] ..\n                                string.format(\"%.30s\", v.name) .. [[</text>]] ..\n                                [[<text x=290 y=]] .. 165 + u * 26 ..\n                                [[ class=\"f15exxxb\">]] ..\n                                GenerateCommaValue(\n                                    string.format(\"%.0f\", v.missinghp)) ..\n                                [[</text>]]\n                    end\n                end\n                u = u + 1\n            end\n        end\n        if DisallowKeyPresses == true then\n            e = e .. [[<svg x=\"0\" y=\"408\">]] ..\n                    [[<rect class=xfill x=0 y=0 rx=0 ry=0 width=300 height=40 />]] ..\n                    [[<rect class=xfill x=0 y=22 rx=10 ry=10 width=300 height=80 />]] ..\n                    [[<svg x=0 y=3>]] ..\n                    [[<text x=\"150\" y=\"15\" class=\"f12mxx\"></text>]] ..\n                    [[<text x=\"150\" y=\"30\" class=\"f12mxx\"></text>]] ..\n                    [[<text x=\"150\" y=\"45\" class=\"f12mxx\">Keypresses disabled.</text>]] ..\n                    [[<text x=\"150\" y=\"60\" class=\"f12mxx\">Change in LUA parameters</text>]] ..\n                    [[<text x=\"150\" y=\"75\" class=\"f12mxx\">by unchecking DisallowKeyPresses.</text>]] ..\n                    [[<text x=\"150\" y=\"90\" class=\"f12mxx\"></text>]] .. [[<svg>]] ..\n                    [[</svg>]]\n        else\n            e = e .. [[<svg x=\"0\" y=\"408\">]] ..\n                    [[<rect class=xfill x=0 y=0 rx=0 ry=0 width=300 height=40 />]] ..\n                    [[<rect class=xfill x=0 y=22 rx=10 ry=10 width=300 height=80 />]] ..\n                    [[<svg x=0 y=3>]] ..\n                    [[<text x=\"150\" y=\"15\" class=\"f12mxx\">Up/down arrows to highlight</text>]] ..\n                    [[<text x=\"150\" y=\"30\" class=\"f12mxx\">CTRL + arrows to move HUD</text>]] ..\n                    [[<text x=\"150\" y=\"45\" class=\"f12mxx\">Left arrow to toggle HUD Mode</text>]] ..\n                    [[<text x=\"150\" y=\"60\" class=\"f12mxx\">ALT+1-4 to set Scrap Tier</text>]] ..\n                    [[<text x=\"150\" y=\"75\" class=\"f12mxx\">ALT+8 to reset HUD position</text>]] ..\n                    [[<text x=\"150\" y=\"90\" class=\"f12mxx\">ALT+9 to shut script off</text>]] ..\n                    [[<svg>]] .. [[</svg>]]\n        end\n    else\n        if DisallowKeyPresses == true then\n            e = e .. [[<text x=\"150\" y=\"60\" class=\"f18mh\" fill=\"#]] ..\n                    ColorHealthy .. [[\">]] .. OkayCenterMessage .. [[</text>]] ..\n                    [[<text x=\"150\" y=\"88\" class=\"f18mh\" fill=\"#]] ..\n                    ColorHealthy .. [[\">]] .. #healthyElements ..\n                    [[ elements / ]] ..\n                    GenerateCommaValue(string.format(\"%.0f\", totalShipMaxHP)) ..\n                    [[ HP.</text>]] .. [[<svg x=\"0\" y=\"100\">]] ..\n                    [[<rect class=xfill x=0 y=0 rx=0 ry=0 width=300 height=40 />]] ..\n                    [[<rect class=xfill x=0 y=35 rx=10 ry=10 width=300 height=30 />]] ..\n                    [[<svg x=0 y=3>]] ..\n                    [[<text x=\"150\" y=\"10\" class=\"f12mxx\">Keypresses disabled.</text>]] ..\n                    [[<text x=\"150\" y=\"25\" class=\"f12mxx\">Change in LUA parameters</text>]] ..\n                    [[<text x=\"150\" y=\"40\" class=\"f12mxx\">by unchecking DisallowKeyPresses.</text>]] ..\n                    [[<text x=\"150\" y=\"55\" class=\"f12mxx\"></text>]] .. [[<svg>]] ..\n                    [[</svg>]]\n        else\n            e = e .. [[<text x=\"150\" y=\"60\" class=\"f18mh\" fill=\"#]] ..\n                    ColorHealthy .. [[\">]] .. OkayCenterMessage .. [[</text>]] ..\n                    [[<text x=\"150\" y=\"88\" class=\"f18mh\" fill=\"#]] ..\n                    ColorHealthy .. [[\">]] .. #healthyElements ..\n                    [[ elements / ]] ..\n                    GenerateCommaValue(string.format(\"%.0f\", totalShipMaxHP)) ..\n                    [[ HP.</text>]] .. [[<svg x=\"0\" y=\"100\">]] ..\n                    [[<rect class=xfill x=0 y=0 rx=0 ry=0 width=300 height=40 />]] ..\n                    [[<rect class=xfill x=0 y=35 rx=10 ry=10 width=300 height=30 />]] ..\n                    [[<svg x=0 y=3>]] ..\n                    [[<text x=\"150\" y=\"10\" class=\"f12mxx\">Left arrow to toggle HUD Mode</text>]] ..\n                    [[<text x=\"150\" y=\"25\" class=\"f12mxx\">CTRL + arrows to move HUD</text>]] ..\n                    [[<text x=\"150\" y=\"40\" class=\"f12mxx\">ALT+8 to reset HUD position</text>]] ..\n                    [[<text x=\"150\" y=\"55\" class=\"f12mxx\">ALT+9 to shut script off</text>]] ..\n                    [[<svg>]] .. [[</svg>]]\n        end\n    end\n    e = e .. [[</svg>]]\n    return e\nend\nfunction GetContentDamageScreen()\n    local a3 = \"\"\n    if #damagedElements > 0 then\n        local a4 = #damagedElements;\n        if a4 > DamagePageSize then a4 = DamagePageSize end\n        if CurrentDamagedPage == math.ceil(#damagedElements / DamagePageSize) then\n            a4 = #damagedElements % DamagePageSize + 12;\n            if a4 > 12 then a4 = a4 - 12 end\n        end\n        a3 =\n            a3 .. [[<rect x=\"20\" y=\"300\" rx=\"5\" ry=\"5\" width=\"930\" height=\"]] ..\n                70 + (a4 + 1) * 50 ..\n                [[\" fill=\"#000000\" fill-opacity=\"0.5\" style=\"stroke:#]] ..\n                ColorWarning .. [[;stroke-width:3;\" />]]\n        a3 = a3 ..\n                 [[<rect x=\"30\" y=\"310\" rx=\"5\" ry=\"5\" width=\"910\" height=\"40\" fill=\"#]] ..\n                 ColorWarning .. [[\" fill-opacity=\"0.5\" />]]\n        if UseMyElementNames == true then\n            a3 = a3 ..\n                     [[<text x=\"110\" y=\"341\" class=\"f30sxx\">Damaged Name</text>]]\n        else\n            a3 = a3 ..\n                     [[<text x=\"110\" y=\"341\" class=\"f30sxx\">Damaged Type</text>]]\n        end\n        a3 = a3 ..\n                 [[<text x=\"417\" y=\"341\" class=\"f30sxx\">HLTH</text><text x=\"545\" y=\"341\" class=\"f30sxx\">DMG</text>]]\n        a3 = a3 .. [[<text x=\"655\" y=\"341\" class=\"f30sxx\">T]] .. ScrapTier ..\n                 [[ SCR</text><text x=\"790\" y=\"341\" class=\"f30sxx\">REPTIME</text>]]\n        AddClickArea(\"damage\", {\n            id = \"SwitchScrapTier\",\n            mode = \"damage\",\n            x1 = 650,\n            x2 = 775,\n            y1 = 315,\n            y2 = 360\n        })\n        local g = 0;\n        for u = 1 + (CurrentDamagedPage - 1) * DamagePageSize, a4 +\n            (CurrentDamagedPage - 1) * DamagePageSize, 1 do\n            g = g + 1;\n            local a5 = damagedElements[u]\n            if UseMyElementNames == true then\n                a3 = a3 .. [[<text x=\"40\" y=\"]] .. 330 + g * 50 ..\n                         [[\" class=\"f25sxx\">]] ..\n                         string.format(\"%.23s\", a5.name) .. [[</text>]]\n            else\n                a3 = a3 .. [[<text x=\"40\" y=\"]] .. 330 + g * 50 ..\n                         [[\" class=\"f25sxx\">]] ..\n                         string.format(\"%.23s\", a5.type) .. [[</text>]]\n            end\n            a3 = a3 .. [[<text x=\"485\" y=\"]] .. 330 + g * 50 ..\n                     [[\" class=\"f25exx\">]] .. a5.percent .. [[%</text>]] ..\n                     [[<text x=\"614\" y=\"]] .. 330 + g * 50 ..\n                     [[\" class=\"f25exx\">]] ..\n                     GenerateCommaValue(string.format(\"%.0f\", a5.missinghp),\n                                        true) .. [[</text>]] ..\n                     [[<text x=\"734\" y=\"]] .. 330 + g * 50 ..\n                     [[\" class=\"f25exx\">]] .. getScraps(a5.missinghp, true) ..\n                     [[</text>]] .. [[<text x=\"908\" y=\"]] .. 330 + g * 50 ..\n                     [[\" class=\"f25exx\">]] .. getRepairTime(a5.missinghp, true) ..\n                     [[</text>]] .. [[<line x1=\"30\" x2=\"940\" y1=\"]] .. 336 + g *\n                     50 .. [[\" y2=\"]] .. 336 + g * 50 .. [[\" style=\"stroke:#]] ..\n                     ColorSecondary .. [[;stroke-opacity:0.2\" />]]\n        end\n        if #damagedElements > DamagePageSize then\n            a3 = a3 .. [[<text x=\"485\" y=\"]] .. 30 + 300 + 11 + (a4 + 1) * 50 ..\n                     [[\" class=\"f25mw\">Page ]] .. CurrentDamagedPage .. \" of \" ..\n                     math.ceil(#damagedElements / DamagePageSize) .. [[</text>]]\n            if CurrentDamagedPage < math.ceil(#damagedElements / DamagePageSize) then\n                a3 = a3 .. [[<svg x=\"30\" y=\"]] .. 300 + 11 + (a4 + 1) * 50 ..\n                         [[\">\n                            <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"50\" style=\"fill:#]] ..\n                         ColorWarning .. [[;\" />\n                            <svg x=\"80\" y=\"15\"><path d=\"M52.48,35.23,69.6,19.4a3.23,3.23,0,0,0-2.19-5.6H32.59a3.23,3.23,0,0,0-2.19,5.6L47.52,35.23A3.66,3.66,0,0,0,52.48,35.23Z\" transform=\"translate(-29.36 -13.8)\"/></svg>\n                        </svg>]]\n                AddClickArea(\"damage\", {\n                    id = \"DamagedPageDown\",\n                    mode = \"damage\",\n                    x1 = 65,\n                    x2 = 260,\n                    y1 = 290 + (a4 + 1) * 50,\n                    y2 = 290 + 50 + (a4 + 1) * 50\n                })\n            else\n                DisableClickArea(\"DamagedPageDown\", \"damage\")\n            end\n            if CurrentDamagedPage > 1 then\n                a3 = a3 .. [[<svg x=\"740\" y=\"]] .. 300 + 11 + (a4 + 1) * 50 ..\n                         [[\">\n                            <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"50\" style=\"fill:#]] ..\n                         ColorWarning .. [[;\" />\n                            <svg x=\"80\" y=\"15\"><path d=\"M47.52,14.77,30.4,30.6a3.23,3.23,0,0,0,2.19,5.6H67.41a3.23,3.23,0,0,0,2.19-5.6L52.48,14.77A3.66,3.66,0,0,0,47.52,14.77Z\" transform=\"translate(-29.36 -13.8)\"/></svg>\n                        </svg>]]\n                AddClickArea(\"damage\", {\n                    id = \"DamagedPageUp\",\n                    mode = \"damage\",\n                    x1 = 750,\n                    x2 = 950,\n                    y1 = 290 + (a4 + 1) * 50,\n                    y2 = 290 + 50 + (a4 + 1) * 50\n                })\n            else\n                DisableClickArea(\"DamagedPageUp\", \"damage\")\n            end\n        end\n    end\n    if #brokenElements > 0 then\n        local a6 = #brokenElements;\n        if a6 > DamagePageSize then a6 = DamagePageSize end\n        if CurrentBrokenPage == math.ceil(#brokenElements / DamagePageSize) then\n            a6 = #brokenElements % DamagePageSize + 12;\n            if a6 > 12 then a6 = a6 - 12 end\n        end\n        a3 =\n            a3 .. [[<rect x=\"970\" y=\"300\" rx=\"5\" ry=\"5\" width=\"930\" height=\"]] ..\n                70 + (a6 + 1) * 50 ..\n                [[\" fill=\"#000000\" fill-opacity=\"0.5\" style=\"stroke:#]] ..\n                ColorCritical .. [[;stroke-width:3;\" />]]\n        a3 = a3 ..\n                 [[<rect x=\"980\" y=\"310\" rx=\"5\" ry=\"5\" width=\"910\" height=\"40\" fill=\"#]] ..\n                 ColorCritical .. [[\" fill-opacity=\"0.5\" />]]\n        if UseMyElementNames == true then\n            a3 = a3 ..\n                     [[<text x=\"1070\" y=\"341\" class=\"f30sxx\">Broken Name</text>]]\n        else\n            a3 = a3 ..\n                     [[<text x=\"1070\" y=\"341\" class=\"f30sxx\">Broken Type</text>]]\n        end\n        a3 = a3 .. [[<text x=\"1495\" y=\"341\" class=\"f30sxx\">DMG</text>]]\n        a3 = a3 .. [[<text x=\"1605\" y=\"341\" class=\"f30sxx\">T]] .. ScrapTier ..\n                 [[ SCR</text><text x=\"1740\" y=\"341\" class=\"f30sxx\">REPTIME</text>]]\n        AddClickArea(\"damage\", {\n            id = \"SwitchScrapTier2\",\n            mode = \"damage\",\n            x1 = 1570,\n            x2 = 1690,\n            y1 = 315,\n            y2 = 360\n        })\n        local g = 0;\n        for u = 1 + (CurrentBrokenPage - 1) * DamagePageSize, a6 +\n            (CurrentBrokenPage - 1) * DamagePageSize, 1 do\n            g = g + 1;\n            local a5 = brokenElements[u]\n            if UseMyElementNames == true then\n                a3 = a3 .. [[<text x=\"1000\" y=\"]] .. 330 + g * 50 ..\n                         [[\" class=\"f25sxx\">]] ..\n                         string.format(\"%.30s\", a5.name) .. [[</text>]]\n            else\n                a3 = a3 .. [[<text x=\"1000\" y=\"]] .. 330 + g * 50 ..\n                         [[\" class=\"f25sxx\">]] ..\n                         string.format(\"%.30s\", a5.type) .. [[</text>]]\n            end\n            a3 = a3 .. [[<text x=\"1564\" y=\"]] .. 330 + g * 50 ..\n                     [[\" class=\"f25exx\">]] ..\n                     GenerateCommaValue(string.format(\"%.0f\", a5.missinghp),\n                                        true) .. [[</text>]] ..\n                     [[<text x=\"1684\" y=\"]] .. 330 + g * 50 ..\n                     [[\" class=\"f25exx\">]] .. getScraps(a5.missinghp, true) ..\n                     [[</text>]] .. [[<text x=\"1858\" y=\"]] .. 330 + g * 50 ..\n                     [[\" class=\"f25exx\">]] .. getRepairTime(a5.missinghp, true) ..\n                     [[</text>]] .. [[<line x1=\"980\" x2=\"1890\" y1=\"]] .. 336 + g *\n                     50 .. [[\" y2=\"]] .. 336 + g * 50 .. [[\" style=\"stroke:#]] ..\n                     ColorSecondary .. [[;stroke-opacity:0.2\" />]]\n        end\n        if #brokenElements > DamagePageSize then\n            a3 =\n                a3 .. [[<text x=\"1435\" y=\"]] .. 30 + 300 + 11 + (a6 + 1) * 50 ..\n                    [[\" class=\"f25mr\">Page ]] .. CurrentBrokenPage .. \" of \" ..\n                    math.ceil(#brokenElements / DamagePageSize) .. [[</text>]]\n            if CurrentBrokenPage > 1 then\n                a3 = a3 .. [[<svg x=\"1690\" y=\"]] .. 300 + 11 + (a6 + 1) * 50 ..\n                         [[\">\n                            <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"50\" style=\"fill:#]] ..\n                         ColorCritical .. [[;\" />\n                            <svg x=\"80\" y=\"15\"><path d=\"M47.52,14.77,30.4,30.6a3.23,3.23,0,0,0,2.19,5.6H67.41a3.23,3.23,0,0,0,2.19-5.6L52.48,14.77A3.66,3.66,0,0,0,47.52,14.77Z\" transform=\"translate(-29.36 -13.8)\"/></svg>\n                        </svg>]]\n                AddClickArea(\"damage\", {\n                    id = \"BrokenPageUp\",\n                    mode = \"damage\",\n                    x1 = 1665,\n                    x2 = 1865,\n                    y1 = 290 + (a6 + 1) * 50,\n                    y2 = 290 + 50 + (a6 + 1) * 50\n                })\n            else\n                DisableClickArea(\"BrokenPageUp\", \"damage\")\n            end\n            if CurrentBrokenPage < math.ceil(#brokenElements / DamagePageSize) then\n                a3 = a3 .. [[<svg x=\"980\" y=\"]] .. 300 + 11 + (a6 + 1) * 50 ..\n                         [[\">\n                            <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"50\" style=\"fill:#]] ..\n                         ColorCritical .. [[;\" />\n                            <svg x=\"80\" y=\"15\"><path d=\"M52.48,35.23,69.6,19.4a3.23,3.23,0,0,0-2.19-5.6H32.59a3.23,3.23,0,0,0-2.19,5.6L47.52,35.23A3.66,3.66,0,0,0,52.48,35.23Z\" transform=\"translate(-29.36 -13.8)\"/></svg>\n                        </svg>]]\n                AddClickArea(\"damage\", {\n                    id = \"BrokenPageDown\",\n                    mode = \"damage\",\n                    x1 = 980,\n                    x2 = 1180,\n                    y1 = 290 + (a6 + 1) * 50,\n                    y2 = 290 + 50 + (a6 + 1) * 50\n                })\n            else\n                DisableClickArea(\"BrokenPageDown\", \"damage\")\n            end\n        end\n    end\n    if #damagedElements > 0 or #brokenElements > 0 then\n        local a7 = math.floor(1878 / #elementsIdList * #damagedElements)\n        local a8 = math.floor(1878 / #elementsIdList * #brokenElements)\n        local a9 = 1878 - a7 - a8 + 1;\n        a3 = a3 ..\n                 [[<rect x=\"20\" y=\"180\" rx=\"0\" ry=\"0\" width=\"1880\" height=\"100\" fill=\"#000000\" fill-opacity=\"1.0\" style=\"stroke:#FF6700;stroke-width:0;\" />]]\n        a3 = a3 .. [[<svg><rect style=\"stroke: #]] .. ColorWarning ..\n                 [[;stroke-width:5px;\" x=\"21\" y=\"180\" rx=\"0\" ry=\"0\" width=\"]] ..\n                 a7 .. [[\" height=\"100\" fill=\"#]] .. ColorWarning ..\n                 [[\" fill-opacity=\"0.2\" /></svg>]]\n        a3 = a3 .. [[<rect x=\"]] .. 21 + a7 ..\n                 [[\" y=\"180\" rx=\"0\" ry=\"0\" width=\"]] .. a9 ..\n                 [[\" height=\"100\" fill=\"#]] .. ColorHealthy ..\n                 [[\" fill-opacity=\"0.2\" />]]\n        a3 = a3 .. [[<rect style=\"stroke: #]] .. ColorCritical ..\n                 [[;stroke-width:5px;\" x=\"]] .. 21 + a7 + a9 - 1 ..\n                 [[\" y=\"180\" rx=\"0\" ry=\"0\" width=\"]] .. a8 ..\n                 [[\" height=\"100\" fill=\"#]] .. ColorCritical ..\n                 [[\" fill-opacity=\"0.2\" />]]\n        if #damagedElements > 0 then\n            a3 = a3 .. [[<text x=\"]] .. 21 + a7 / 2 ..\n                     [[\" y=\"246\" class=\"f60m\" fill=\"#]] .. ColorWarning ..\n                     [[\">]] .. #damagedElements .. [[</text>]]\n        end\n        if #healthyElements > 0 then\n            a3 = a3 .. [[<text x=\"]] .. 21 + a7 + a9 / 2 ..\n                     [[\" y=\"246\" class=\"f60m\" fill=\"#]] .. ColorHealthy ..\n                     [[\">]] .. #healthyElements .. [[</text>]]\n        end\n        if #brokenElements > 0 then\n            a3 = a3 .. [[<text x=\"]] .. 21 + a7 + a9 - 1 + a8 / 2 ..\n                     [[\" y=\"246\" class=\"f60m\" fill=\"#]] .. ColorCritical ..\n                     [[\">]] .. #brokenElements .. [[</text>]]\n        end\n        a3 = a3 ..\n                 [[<rect x=\"20\" y=\"180\" rx=\"0\" ry=\"0\" width=\"1880\" height=\"100\" fill=\"#000000\" fill-opacity=\"0\" style=\"stroke:#FF6700;stroke-width:0;\" />]]\n        a3 = a3 .. [[<text x=\"960\" y=\"140\" class=\"f36mxx\">]] ..\n                 GenerateCommaValue(string.format(\"%.0f\",\n                                                  totalShipMaxHP - totalShipHP)) ..\n                 [[ HP damage in total ]] ..\n                 getScraps(totalShipMaxHP - totalShipHP, true) .. [[ T]] ..\n                 ScrapTier .. [[ scraps needed. ]] ..\n                 getRepairTime(totalShipMaxHP - totalShipHP, true) ..\n                 [[ projected repair time.</text>]]\n    else\n        a3 = a3 .. GetElementLogo(812, 380, \"ch\", \"ch\", \"ch\") ..\n                 [[<text x=\"960\" y=\"320\" class=\"f50m\" fill=\"#]] .. ColorHealthy ..\n                 [[\">]] .. OkayCenterMessage .. [[</text>]] ..\n                 [[<text x=\"960\" y=\"760\" class=\"f50m\" fill=\"#]] .. ColorHealthy ..\n                 [[\">]] .. #healthyElements .. [[ elements stand ]] ..\n                 GenerateCommaValue(string.format(\"%.0f\", totalShipMaxHP)) ..\n                 [[ HP strong.</text>]]\n    end\n    forceDamageRedraw = false;\n    return a3\nend\nfunction ActionStopengines()\n    if DisallowKeyPresses == true then return end\n    ToggleHUD()\nend\nfunction ActionStrafeRight()\n    if DisallowKeyPresses == true then return end\n    if KeyCTRLPressed == true then\n        if HUDShiftU < 4000 then\n            HUDShiftU = HUDShiftU + 50;\n            SaveToDatabank()\n            RenderScreens()\n        end\n    else\n        HudDeselectElement()\n    end\nend\nfunction ActionStrafeLeft()\n    if DisallowKeyPresses == true then return end\n    if KeyCTRLPressed == true then\n        if HUDShiftU >= 50 then\n            HUDShiftU = HUDShiftU - 50;\n            SaveToDatabank()\n            RenderScreens()\n        end\n    else\n        ToggleHUD()\n    end\nend\nfunction ActionDown()\n    if DisallowKeyPresses == true then return end\n    if KeyCTRLPressed == true then\n        if HUDShiftV < 4000 then\n            HUDShiftV = HUDShiftV + 50;\n            SaveToDatabank()\n            RenderScreens()\n        end\n    else\n        ChangeHudSelectedElement(1)\n    end\nend\nfunction ActionUp()\n    if DisallowKeyPresses == true then return end\n    if KeyCTRLPressed == true then\n        if HUDShiftV >= 50 then\n            HUDShiftV = HUDShiftV - 50;\n            SaveToDatabank()\n            RenderScreens()\n        end\n    else\n        ChangeHudSelectedElement(-1)\n    end\nend\nfunction ActionOption1()\n    if DisallowKeyPresses == true then return end\n    ScrapTier = 1;\n    SetRefresh(\"damage\")\n    RenderScreens(\"damage\")\nend\nfunction ActionOption2()\n    if DisallowKeyPresses == true then return end\n    ScrapTier = 2;\n    SetRefresh(\"damage\")\n    RenderScreens(\"damage\")\nend\nfunction ActionOption3()\n    if DisallowKeyPresses == true then return end\n    ScrapTier = 3;\n    SetRefresh(\"damage\")\n    RenderScreens(\"damage\")\nend\nfunction ActionOption4()\n    if DisallowKeyPresses == true then return end\n    ScrapTier = 4;\n    SetRefresh(\"damage\")\n    RenderScreens(\"damage\")\nend\nfunction ActionOption8()\n    if DisallowKeyPresses == true then return end\n    HUDShiftU = 0;\n    HUDShiftV = 0;\n    SetRefresh(\"damage\")\n    RenderScreens(\"damage\")\nend\nfunction ActionOption9()\n    if DisallowKeyPresses == true then return end\n    SaveToDatabank()\n    SwitchScreens(\"off\")\n    unit.exit()\nend\n","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"8"},{"code":"SaveToDatabank()\nSwitchScreens(\"off\")","filter":{"args":[],"signature":"stop()","slotKey":"-1"},"key":"9"},{"code":"OnTickData()\n","filter":{"args":[{"value":"UpdateData"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"10"},{"code":"ToggleHighlight()","filter":{"args":[{"value":"UpdateHighlight"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"11"},{"code":"--[[\n    Damage Report 3.2\n    A LUA script for Dual Universe\n\n    Created By Dorian Gray\n    Ingame: DorianGray\n    Discord: Dorian Gray#2623\n\n    You can find/update this script on GitHub. Explanations, installation and usage information as well as screenshots can be found there too.\n    GitHub: https://github.com/DorianTheGrey/DU-DamageReport\n\n    GNU Public License 3.0. Use whatever you want, be so kind to leave credit.\n    \n    Credits & thanks:\n        Thanks to Bayouking1 and kalazzerx for managing their forks of this script during my long absence to support the community. :)\n        Thanks to Bayouking1 for fixing rocket fuel calculations.\n        Thanks to NovaQuark for creating the MMO of the century.\n        Thanks to Jericho, Dmentia and Archaegeo for learning a lot from their fine scripts.\n        Thanks to TheBlacklist for testing and wonderful suggestions.\n        SVG patterns by Hero Patterns.\n        DU atlas data from Jayle Break.\n        \n]]\n\n --[[ 1. USER DEFINED VARIABLES ]] YourShipsName = \"Enter here\" -- export Enter your ship name here if you want it displayed instead of the ship's ID. YOU NEED TO LEAVE THE QUOTATION MARKS.\n\nSkillRepairToolEfficiency = 0 -- export Enter (0-5) your talent \"Mining and Inventory -> Equipment Manager -> Repair Tool Efficiency\"\nSkillRepairToolOptimization = 0 -- export Enter your talent \"Mining and Inventory -> Equipment Manager -> Repair Tool Optimization\"\n\nStatAtmosphericFuelTankHandling = 0 -- export (0-5) Enter the LEVEL OF YOUR PLACED ATMOSPHERIC FUEL TANKS (from the builders talent \"Piloting -> Atmospheric Flight Technician -> Atmospheric Fuel-Tank Handling\")\nStatSpaceFuelTankHandling = 0 -- export (0-5) Enter the LEVEL OF YOUR PLACED FUEL SPACE TANKS (from the builders talent \"Piloting -> Atmospheric Engine Technician -> Space Handling\")\nStatRocketFuelTankHandling = 0 -- export (0-5) Enter the LEVEL OF YOUR PLACED FUEL ROCKET TANKS (from the builders talent \"Piloting -> Rocket Scientist -> Rocket Booster Fuel Tank Handling\")\nStatContainerOptimization = 0 -- export (0-5) Enter the LEVEL OF YOUR PLACED FUEL TANKS \"from the builders talent Mining and Inventory -> Stock Control -> Container Optimization\"\nStatFuelTankOptimization = 0 -- export (0-5) Enter the LEVEL OF YOUR PLACED FUEL TANKS \"from the builders talent Mining and Inventory -> Stock Control -> Fuel Tank Optimization\"\n\nShowWelcomeMessage = true -- export Do you want the welcome message on the start screen with your name?\nDisallowKeyPresses = false -- export Need your keys for other scripts/huds and want to prevent Damage Report keypresses to be processed? Then check this. (Usability of the HUD mode will be small.)\nAddSummertimeHour = false -- export: Is summertime currently enabled in your location? (Adds one hour.)\n\nUpdateDataInterval = 1.0;\nHighlightBlinkingInterval = 0.5;\nColorPrimary = \"FF6700\"\nColorSecondary = \"FFFFFF\"\nColorTertiary = \"000000\"\nColorHealthy = \"00FF00\"\nColorWarning = \"FFFF00\"\nColorCritical = \"FF0000\"\nColorBackground = \"000000\"\nColorBackgroundPattern = \"4F4F4F\"\nColorFuelAtmospheric = \"004444\"\nColorFuelSpace = \"444400\"\nColorFuelRocket = \"440044\"\nVERSION = 3.2;\nDebugMode = false;\nDebugRenderClickareas = true;\nDBData = {}\ncore = nil;\ndb = nil;\nscreens = {}\ndscreens = {}\nWarnings = {}\nscreenModes = {\n    [\"flight\"] = {id = \"flight\"},\n    [\"damage\"] = {id = \"damage\"},\n    [\"damageoutline\"] = {id = \"damageoutline\"},\n    [\"fuel\"] = {id = \"fuel\"},\n    [\"cargo\"] = {id = \"cargo\"},\n    [\"agg\"] = {id = \"agg\"},\n    [\"map\"] = {id = \"map\"},\n    [\"time\"] = {id = \"time\", activetoggle = \"true\"},\n    [\"settings1\"] = {id = \"settings1\"},\n    [\"startup\"] = {id = \"startup\"}\n}\nbackgroundModes = {\n    \"deathstar\", \"capsule\", \"rain\", \"signal\", \"hexagon\", \"diagonal\", \"diamond\",\n    \"plus\", \"dots\"\n}\nBackgroundMode = \"deathstar\"\nBackgroundSelected = 1;\nBackgroundModeOpacity = 0.25;\nSaveVars = {\n    \"dscreens\", \"ColorPrimary\", \"ColorSecondary\", \"ColorTertiary\",\n    \"ColorHealthy\", \"ColorWarning\", \"ColorCritical\", \"ColorBackground\",\n    \"ColorBackgroundPattern\", \"ColorFuelAtmospheric\", \"ColorFuelSpace\",\n    \"ColorFuelRocket\", \"ScrapTier\", \"HUDMode\", \"SimulationMode\", \"DMGOStretch\",\n    \"HUDShiftU\", \"HUDShiftV\", \"colorIDIndex\", \"colorIDTable\", \"BackgroundMode\",\n    \"BackgroundSelected\", \"BackgroundModeOpacity\"\n}\nHUDMode = false;\nHUDShiftU = 0;\nHUDShiftV = 0;\nhudSelectedIndex = 0;\nhudStartIndex = 1;\nhudArrowSticker = {}\nhighlightOn = false;\nhighlightID = 0;\nhighlightX = 0;\nhighlightY = 0;\nhighlightZ = 0;\nSimulationMode = false;\nOkayCenterMessage = \"All systems nominal.\"\nCurrentDamagedPage = 1;\nCurrentBrokenPage = 1;\nDamagePageSize = 12;\nScrapTier = 1;\ntotalScraps = 0;\nScrapTierRepairTimes = {10, 50, 250, 1250}\ncoreWorldOffset = 0;\ntotalShipHP = 0;\nformerTotalShipHP = -1;\ntotalShipMaxHP = 0;\ntotalShipIntegrity = 100;\nelementsId = {}\nelementsIdList = {}\ndamagedElements = {}\nbrokenElements = {}\nrE = {}\nhealthyElements = {}\ntypeElements = {}\nElementCounter = 0;\nUseMyElementNames = true;\ndmgoElements = {}\nDMGOMaxElements = 250;\nDMGOStretch = false;\nShipXmin = 99999999;\nShipXmax = -99999999;\nShipYmin = 99999999;\nShipYmax = -99999999;\nShipZmin = 99999999;\nShipZmax = -99999999;\ntotalShipMass = 0;\nformerTotalShipMass = -1;\nformerTime = -1;\nFuelAtmosphericTanks = {}\nFuelSpaceTanks = {}\nFuelRocketTanks = {}\nFuelAtmosphericTotal = 0;\nFuelSpaceTotal = 0;\nFuelRocketTotal = 0;\nFuelAtmosphericCurrent = 0;\nFuelSpaceTotalCurrent = 0;\nFuelRocketTotalCurrent = 0;\nformerFuelAtmosphericTotal = -1;\nformerFuelSpaceTotal = -1;\nformerFuelRocketTotal = -1;\nhexTable = {\n    \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\",\n    \"F\"\n}\ncolorIDIndex = 1;\ncolorIDTable = {\n    [1] = {\n        id = \"ColorPrimary\",\n        desc = \"Main HUD Color\",\n        basec = \"FF6700\",\n        newc = \"FF6700\"\n    },\n    [2] = {\n        id = \"ColorSecondary\",\n        desc = \"Secondary HUD Color\",\n        basec = \"FFFFFF\",\n        newc = \"FFFFFF\"\n    },\n    [3] = {\n        id = \"ColorTertiary\",\n        desc = \"Tertiary HUD Color\",\n        basec = \"000000\",\n        newc = \"000000\"\n    },\n    [4] = {\n        id = \"ColorHealthy\",\n        desc = \"Color code for Healthy/Okay\",\n        basec = \"00FF00\",\n        newc = \"00FF00\"\n    },\n    [5] = {\n        id = \"ColorWarning\",\n        desc = \"Color code for Damaged/Warning\",\n        basec = \"FFFF00\",\n        newc = \"FFFF00\"\n    },\n    [6] = {\n        id = \"ColorCritical\",\n        desc = \"Color code for Broken/Critical\",\n        basec = \"FF0000\",\n        newc = \"FF0000\"\n    },\n    [7] = {\n        id = \"ColorBackground\",\n        desc = \"Background Color\",\n        basec = \"000000\",\n        newc = \"000000\"\n    },\n    [8] = {\n        id = \"ColorBackgroundPattern\",\n        desc = \"Background Pattern Color\",\n        basec = \"4F4F4F\",\n        newc = \"4F4F4F\"\n    },\n    [9] = {\n        id = \"ColorFuelAtmospheric\",\n        desc = \"Color for Atmo Fuel/Elements\",\n        basec = \"004444\",\n        newc = \"004444\"\n    },\n    [10] = {\n        id = \"ColorFuelSpace\",\n        desc = \"Color for Space Fuel/Elements\",\n        basec = \"444400\",\n        newc = \"444400\"\n    },\n    [11] = {\n        id = \"ColorFuelRocket\",\n        desc = \"Color for Rocket Fuel/Elements\",\n        basec = \"440044\",\n        newc = \"440044\"\n    }\n}\nfunction InitiateSlots()\n    for a, b in pairs(unit) do\n        if type(b) == \"table\" and type(b.export) == \"table\" and\n            b.getElementClass then\n            local c = b.getElementClass():lower()\n            if c:find(\"coreunit\") then\n                core = b;\n                local d = core.getMaxHitPoints()\n                if d > 10000 then\n                    coreWorldOffset = 128\n                elseif d > 1000 then\n                    coreWorldOffset = 64\n                elseif d > 150 then\n                    coreWorldOffset = 32\n                else\n                    coreWorldOffset = 16\n                end\n            elseif c == 'databankunit' then\n                db = b\n            elseif c == \"screenunit\" then\n                local e = \"startup\"\n                screens[#screens + 1] = {\n                    element = b,\n                    id = b.getId(),\n                    mode = e,\n                    submode = \"\",\n                    ClickAreas = {},\n                    refresh = true,\n                    active = false,\n                    fuelA = true,\n                    fuelS = true,\n                    fuelR = true,\n                    fuelIndex = 1\n                }\n            end\n        end\n    end\nend\nfunction LoadFromDatabank()\n    if db == nil then\n        return\n    else\n        for f, g in pairs(SaveVars) do\n            if db.hasKey(g) then\n                local h = json.decode(db.getStringValue(g))\n                if h ~= nil then\n                    if g == \"YourShipsName\" or g == \"AddSummertimeHour\" or g ==\n                        \"UpdateDataInterval\" or g == \"HighlightBlinkingInterval\" or\n                        g == \"SkillRepairToolEfficiency\" or g ==\n                        \"SkillRepairToolOptimization\" or g ==\n                        \"SkillAtmosphericFuelEfficiency\" or g ==\n                        \"SkillSpaceFuelEfficiency\" or g ==\n                        \"SkillRocketFuelEfficiency\" or g ==\n                        \"StatAtmosphericFuelTankHandling\" or g ==\n                        \"StatSpaceFuelTankHandling\" or g ==\n                        \"StatRocketFuelTankHandling\" then\n                    else\n                        _G[g] = h\n                    end\n                end\n            end\n        end\n        for i, j in ipairs(screens) do\n            for k, l in ipairs(dscreens) do\n                if screens[i].id == dscreens[k].id then\n                    screens[i].mode = dscreens[k].mode;\n                    screens[i].submode = dscreens[k].submode;\n                    screens[i].active = dscreens[k].active;\n                    screens[i].refresh = true;\n                    screens[i].fuelA = dscreens[k].fuelA;\n                    screens[i].fuelS = dscreens[k].fuelS;\n                    screens[i].fuelR = dscreens[k].fuelR;\n                    screens[i].fuelIndex = dscreens[k].fuelIndex\n                end\n            end\n        end\n    end\nend\nfunction SaveToDatabank()\n    if db == nil then\n        return\n    else\n        dscreens = {}\n        for i, m in ipairs(screens) do\n            dscreens[i] = {}\n            dscreens[i].id = m.id;\n            dscreens[i].mode = m.mode;\n            dscreens[i].submode = m.submode;\n            dscreens[i].active = m.active;\n            dscreens[i].fuelA = m.fuelA;\n            dscreens[i].fuelS = m.fuelS;\n            dscreens[i].fuelR = m.fuelR;\n            dscreens[i].fuelIndex = m.fuelIndex\n        end\n        db.clear()\n        for f, g in pairs(SaveVars) do\n            db.setStringValue(g, json.encode(_G[g]))\n        end\n    end\nend\nfunction InitiateScreens()\n    if screens ~= nil and #screens > 0 then\n        for i = 1, #screens, 1 do\n            screens[i] = CreateClickAreasForScreen(screens[i])\n        end\n    end\nend\nfunction UpdateTypeData()\n    FuelAtmosphericTanks = {}\n    FuelSpaceTanks = {}\n    FuelRocketTanks = {}\n    FuelAtmosphericTotal = 0;\n    FuelAtmosphericCurrent = 0;\n    FuelSpaceTotal = 0;\n    FuelSpaceCurrent = 0;\n    FuelRocketCurrent = 0;\n    FuelRocketTotal = 0;\n    local n = 4;\n    local o = 6;\n    local p = 0.8;\n    if StatContainerOptimization > 0 then\n        n = n - 0.05 * StatContainerOptimization * n;\n        o = o - 0.05 * StatContainerOptimization * o;\n        p = p - 0.05 * StatContainerOptimization * p\n    end\n    if StatFuelTankOptimization > 0 then\n        n = n - 0.05 * StatFuelTankOptimization * n;\n        o = o - 0.05 * StatFuelTankOptimization * o;\n        p = p - 0.05 * StatFuelTankOptimization * p\n    end\n    for i, q in ipairs(typeElements) do\n        local r = core.getElementNameById(q) or \"\"\n        local s = core.getElementTypeById(q) or \"\"\n        local t = core.getElementPositionById(q) or 0;\n        local u = core.getElementHitPointsById(q) or 0;\n        local v = core.getElementMaxHitPointsById(q) or 0;\n        local w = core.getElementMassById(q) or 0;\n        local x = \"\"\n        local y = 0;\n        local z = 0;\n        local A = 0;\n        local B = 0;\n        if s == \"Atmospheric Fuel Tank\" then\n            if v > 10000 then\n                x = \"L\"\n                z = 5480;\n                y = 12800\n            elseif v > 1300 then\n                x = \"M\"\n                z = 988.67;\n                y = 1600\n            elseif v > 150 then\n                x = \"S\"\n                z = 182.67;\n                y = 400\n            else\n                x = \"XS\"\n                z = 35.03;\n                y = 100\n            end\n            if StatAtmosphericFuelTankHandling > 0 then\n                y = 0.2 * StatAtmosphericFuelTankHandling * y + y\n            end\n            A = w - z;\n            if A <= 10 then A = 0 end\n            B = string.format(\"%.0f\", A / n)\n            cPercent = string.format(\"%.1f\", math.floor(100 / y * tonumber(B)))\n            table.insert(FuelAtmosphericTanks, {\n                type = 1,\n                id = q,\n                name = r,\n                maxhp = v,\n                hp = GetHPforElement(q),\n                pos = t,\n                size = x,\n                mass = z,\n                vol = y,\n                cvol = B,\n                percent = cPercent\n            })\n            if u > 0 then\n                FuelAtmosphericCurrent = FuelAtmosphericCurrent + B\n            end\n            FuelAtmosphericTotal = FuelAtmosphericTotal + y\n        elseif s == \"Space Fuel Tank\" then\n            if v > 10000 then\n                x = \"L\"\n                z = 5480;\n                y = 12800\n            elseif v > 1300 then\n                x = \"M\"\n                z = 988.67;\n                y = 1600\n            else\n                x = \"S\"\n                z = 182.67;\n                y = 400\n            end\n            if StatSpaceFuelTankHandling > 0 then\n                y = 0.2 * StatSpaceFuelTankHandling * y + y\n            end\n            A = w - z;\n            if A <= 10 then A = 0 end\n            B = string.format(\"%.0f\", A / o)\n            cPercent = string.format(\"%.1f\", 100 / y * tonumber(B))\n            table.insert(FuelSpaceTanks, {\n                type = 2,\n                id = q,\n                name = r,\n                maxhp = v,\n                hp = GetHPforElement(q),\n                pos = t,\n                size = x,\n                mass = z,\n                vol = y,\n                cvol = B,\n                percent = cPercent\n            })\n            if u > 0 then FuelSpaceCurrent = FuelSpaceCurrent + B end\n            FuelSpaceTotal = FuelSpaceTotal + y\n        elseif s == \"Rocket Fuel Tank\" then\n            if v > 65000 then\n                x = \"L\"\n                z = 25740;\n                y = 50000\n            elseif v > 6000 then\n                x = \"M\"\n                z = 4720;\n                y = 6400\n            elseif v > 700 then\n                x = \"S\"\n                z = 886.72;\n                y = 800\n            else\n                x = \"XS\"\n                z = 173.42;\n                y = 400\n            end\n            if StatRocketFuelTankHandling > 0 then\n                y = 0.1 * StatRocketFuelTankHandling * y + y\n            end\n            A = w - z;\n            if A <= 10 then A = 0 end\n            B = string.format(\"%.0f\", A / p)\n            cPercent = string.format(\"%.1f\", 100 / y * tonumber(B))\n            table.insert(FuelRocketTanks, {\n                type = 3,\n                id = q,\n                name = r,\n                maxhp = v,\n                hp = GetHPforElement(q),\n                pos = t,\n                size = x,\n                mass = z,\n                vol = y,\n                cvol = B,\n                percent = cPercent\n            })\n            if u > 0 then FuelRocketCurrent = FuelRocketCurrent + B end\n            FuelRocketTotal = FuelRocketTotal + y\n        end\n    end\n    if FuelAtmosphericCurrent ~= formerFuelAtmosphericCurrent then\n        SetRefresh(\"fuel\")\n        formerFuelAtmosphericCurrent = FuelAtmosphericCurrent\n    end\n    if FuelSpaceCurrent ~= formerFuelSpaceCurrent then\n        SetRefresh(\"fuel\")\n        formerFuelSpaceCurrent = FuelSpaceCurrent\n    end\n    if FuelRocketCurrent ~= formerFuelRocketCurrent then\n        SetRefresh(\"fuel\")\n        formerFuelRocketCurrent = FuelRocketCurrent\n    end\nend\nfunction UpdateDamageData(C)\n    C = C or false;\n    if SimulationActive == true then return end\n    local formerTotalShipHP = totalShipHP;\n    totalShipHP = 0;\n    totalShipMaxHP = 0;\n    totalShipIntegrity = 100;\n    damagedElements = {}\n    brokenElements = {}\n    healthyElements = {}\n    if C == true then typeElements = {} end\n    ElementCounter = 0;\n    elementsIdList = core.getElementIdList()\n    for i, q in pairs(elementsIdList) do\n        ElementCounter = ElementCounter + 1;\n        local r = core.getElementNameById(q)\n        local s = core.getElementTypeById(q)\n        local t = core.getElementPositionById(q)\n        local u = core.getElementHitPointsById(q)\n        local v = core.getElementMaxHitPointsById(q)\n        if SimulationMode == true then\n            SimulationActive = true;\n            local D = math.random(0, 10)\n            if D < 2 and #brokenElements < 30 then\n                u = 0\n            elseif D >= 2 and D < 4 and #damagedElements < 30 then\n                u = math.random(1, math.ceil(v))\n            else\n                u = v\n            end\n        end\n        totalShipHP = totalShipHP + u;\n        totalShipMaxHP = totalShipMaxHP + v;\n        if v - u > constants.epsilon then\n            if u > 0 then\n                table.insert(damagedElements, {\n                    id = q,\n                    name = r,\n                    type = s,\n                    counter = ElementCounter,\n                    hp = u,\n                    maxhp = v,\n                    missinghp = v - u,\n                    percent = math.ceil(100 / v * u),\n                    pos = t\n                })\n            else\n                table.insert(brokenElements, {\n                    id = q,\n                    name = r,\n                    type = s,\n                    counter = ElementCounter,\n                    hp = u,\n                    maxhp = v,\n                    missinghp = v - u,\n                    percent = 0,\n                    pos = t\n                })\n            end\n        else\n            table.insert(healthyElements, {\n                id = q,\n                name = r,\n                type = s,\n                counter = ElementCounter,\n                hp = u,\n                maxhp = v,\n                pos = t\n            })\n            if q == highlightID then\n                highlightID = 0;\n                highlightOn = false;\n                HideHighlight()\n                hudSelectedIndex = 0\n            end\n        end\n        if C == true then\n            if s == \"Atmospheric Fuel Tank\" or s == \"Space Fuel Tank\" or s ==\n                \"Rocket Fuel Tank\" then table.insert(typeElements, q) end\n        end\n    end\n    SortDamageTables()\n    rE = {}\n    if #brokenElements > 0 then\n        for f, j in ipairs(brokenElements) do\n            table.insert(rE, {\n                id = j.id,\n                missinghp = j.missinghp,\n                hp = j.hp,\n                name = j.name,\n                type = j.type,\n                pos = j.pos\n            })\n        end\n    end\n    if #damagedElements > 0 then\n        for f, j in ipairs(damagedElements) do\n            table.insert(rE, {\n                id = j.id,\n                missinghp = j.missinghp,\n                hp = j.hp,\n                name = j.name,\n                type = j.type,\n                pos = j.pos\n            })\n        end\n    end\n    if #rE > 0 then\n        table.sort(rE, function(E, F) return E.missinghp > F.missinghp end)\n    end\n    totalShipIntegrity = string.format(\"%2.0f\",\n                                       100 / totalShipMaxHP * totalShipHP)\n    if formerTotalShipHP ~= totalShipHP then\n        forceDamageRedraw = true;\n        formerTotalShipHP = totalShipHP\n    else\n        forceDamageRedraw = false\n    end\nend\nfunction GetHPforElement(q)\n    for i, j in ipairs(brokenElements) do if j.id == q then return 0 end end\n    for i, j in ipairs(damagedElements) do if j.id == q then return j.hp end end\n    for i, j in ipairs(healthyElements) do\n        if j.id == q then return j.maxhp end\n    end\nend\nfunction UpdateClickArea(G, H, I)\n    for i, m in ipairs(screens) do\n        for J, j in pairs(screens[i].ClickAreas) do\n            if j.id == G and j.mode == I then\n                screens[i].ClickAreas[J] = H\n            end\n        end\n    end\nend\nfunction AddClickArea(I, H)\n    for i, m in ipairs(screens) do\n        if screens[i].mode == I then\n            table.insert(screens[i].ClickAreas, H)\n        end\n    end\nend\nfunction AddClickAreaForScreenID(K, H)\n    for i, m in ipairs(screens) do\n        if screens[i].id == K then table.insert(screens[i].ClickAreas, H) end\n    end\nend\nfunction DisableClickArea(G, I)\n    UpdateClickArea(G, {id = G, mode = I, x1 = -1, x2 = -1, y1 = -1, y2 = -1})\nend\nfunction SetRefresh(I, L)\n    I = I or \"all\"\n    L = L or \"all\"\n    if screens ~= nil and #screens > 0 then\n        for i = 1, #screens, 1 do\n            if screens[i].mode == I or I == \"all\" then\n                if screens[i].submode == L or L == \"all\" then\n                    screens[i].refresh = true\n                end\n            end\n        end\n    end\nend\nfunction WipeClickAreasForScreen(m)\n    m.ClickAreas = {}\n    return m\nend\nfunction CreateBaseClickAreas(m)\n    table.insert(m.ClickAreas, {\n        mode = \"all\",\n        id = \"ToggleHudMode\",\n        x1 = 1537,\n        x2 = 1728,\n        y1 = 1015,\n        y2 = 1075\n    })\n    table.insert(m.ClickAreas, {\n        mode = \"all\",\n        id = \"ButtonPress\",\n        param = \"damage\",\n        x1 = 193,\n        x2 = 384,\n        y1 = 1015,\n        y2 = 1075\n    })\n    table.insert(m.ClickAreas, {\n        mode = \"all\",\n        id = \"ButtonPress\",\n        param = \"damageoutline\",\n        x1 = 385,\n        x2 = 576,\n        y1 = 1015,\n        y2 = 1075\n    })\n    table.insert(m.ClickAreas, {\n        mode = \"all\",\n        id = \"ButtonPress\",\n        param = \"fuel\",\n        x1 = 577,\n        x2 = 768,\n        y1 = 1015,\n        y2 = 1075\n    })\n    table.insert(m.ClickAreas, {\n        mode = \"all\",\n        id = \"ButtonPress\",\n        param = \"time\",\n        x1 = 0,\n        x2 = 192,\n        y1 = 1015,\n        y2 = 1075\n    })\n    table.insert(m.ClickAreas, {\n        mode = \"all\",\n        id = \"ButtonPress\",\n        param = \"settings1\",\n        x1 = 1729,\n        x2 = 1920,\n        y1 = 1015,\n        y2 = 1075\n    })\n    return m\nend\nfunction CreateClickAreasForScreen(m)\n    if m == nil then return {} end\n    if m.mode == \"flight\" then\n    elseif m.mode == \"damage\" then\n        table.insert(m.ClickAreas, {\n            mode = \"damage\",\n            id = \"ToggleElementLabel\",\n            x1 = 70,\n            x2 = 425,\n            y1 = 325,\n            y2 = 355\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"damage\",\n            id = \"ToggleElementLabel2\",\n            x1 = 980,\n            x2 = 1400,\n            y1 = 325,\n            y2 = 355\n        })\n    elseif m.mode == \"damageoutline\" then\n        table.insert(m.ClickAreas, {\n            mode = \"damageoutline\",\n            id = \"DMGOChangeView\",\n            param = \"top\",\n            x1 = 60,\n            x2 = 439,\n            y1 = 150,\n            y2 = 200\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"damageoutline\",\n            id = \"DMGOChangeView\",\n            param = \"side\",\n            x1 = 440,\n            x2 = 824,\n            y1 = 150,\n            y2 = 200\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"damageoutline\",\n            id = \"DMGOChangeView\",\n            param = \"front\",\n            x1 = 825,\n            x2 = 1215,\n            y1 = 150,\n            y2 = 200\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"damageoutline\",\n            id = \"DMGOChangeStretch\",\n            x1 = 1530,\n            x2 = 1580,\n            y1 = 150,\n            y2 = 200\n        })\n    elseif m.mode == \"fuel\" then\n    elseif m.mode == \"cargo\" then\n    elseif m.mode == \"agg\" then\n    elseif m.mode == \"map\" then\n    elseif m.mode == \"time\" then\n    elseif m.mode == \"settings1\" then\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"ToggleBackground\",\n            x1 = 75,\n            x2 = 860,\n            y1 = 170,\n            y2 = 215\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"PreviousBackground\",\n            x1 = 75,\n            x2 = 460,\n            y1 = 235,\n            y2 = 285\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"NextBackground\",\n            x1 = 480,\n            x2 = 860,\n            y1 = 235,\n            y2 = 285\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"DecreaseOpacity\",\n            x1 = 75,\n            x2 = 460,\n            y1 = 300,\n            y2 = 350\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"IncreaseOpacity\",\n            x1 = 480,\n            x2 = 860,\n            y1 = 300,\n            y2 = 350\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"ResetColors\",\n            x1 = 75,\n            x2 = 860,\n            y1 = 370,\n            y2 = 415\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"PreviousColorID\",\n            x1 = 90,\n            x2 = 140,\n            y1 = 500,\n            y2 = 550\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"NextColorID\",\n            x1 = 795,\n            x2 = 845,\n            y1 = 500,\n            y2 = 550\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"ColorPosUp\",\n            param = \"1\",\n            x1 = 210,\n            x2 = 290,\n            y1 = 655,\n            y2 = 700\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"ColorPosUp\",\n            param = \"2\",\n            x1 = 300,\n            x2 = 380,\n            y1 = 655,\n            y2 = 700\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"ColorPosUp\",\n            param = \"3\",\n            x1 = 385,\n            x2 = 465,\n            y1 = 655,\n            y2 = 700\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"ColorPosUp\",\n            param = \"4\",\n            x1 = 470,\n            x2 = 550,\n            y1 = 655,\n            y2 = 700\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"ColorPosUp\",\n            param = \"5\",\n            x1 = 560,\n            x2 = 640,\n            y1 = 655,\n            y2 = 700\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"ColorPosUp\",\n            param = \"6\",\n            x1 = 645,\n            x2 = 725,\n            y1 = 655,\n            y2 = 700\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"ColorPosDown\",\n            param = \"1\",\n            x1 = 210,\n            x2 = 290,\n            y1 = 740,\n            y2 = 780\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"ColorPosDown\",\n            param = \"2\",\n            x1 = 300,\n            x2 = 380,\n            y1 = 740,\n            y2 = 780\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"ColorPosDown\",\n            param = \"3\",\n            x1 = 385,\n            x2 = 465,\n            y1 = 740,\n            y2 = 780\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"ColorPosDown\",\n            param = \"4\",\n            x1 = 470,\n            x2 = 550,\n            y1 = 740,\n            y2 = 780\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"ColorPosDown\",\n            param = \"5\",\n            x1 = 560,\n            x2 = 640,\n            y1 = 740,\n            y2 = 780\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"ColorPosDown\",\n            param = \"6\",\n            x1 = 645,\n            x2 = 725,\n            y1 = 740,\n            y2 = 780\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"ResetPosColor\",\n            x1 = 160,\n            x2 = 340,\n            y1 = 885,\n            y2 = 935\n        })\n        table.insert(m.ClickAreas, {\n            mode = \"settings1\",\n            id = \"ApplyPosColor\",\n            x1 = 355,\n            x2 = 780,\n            y1 = 885,\n            y2 = 935\n        })\n    elseif m.mode == \"startup\" then\n    end\n    m = CreateBaseClickAreas(m)\n    return m\nend\nfunction CheckClick(M, N, O)\n    M = M * 1920;\n    N = N * 1120;\n    O = O or \"\"\n    HitPayload = {}\n    if screens ~= nil and #screens > 0 then\n        for i = 1, #screens, 1 do\n            if screens[i].active == true and screens[i].element.getMouseX() ~=\n                -1 and screens[i].element.getMouseY() ~= -1 then\n                if O == \"\" then\n                    for J, j in pairs(screens[i].ClickAreas) do\n                        if j ~= nil and M >= j.x1 and M <= j.x2 and N >= j.y1 and\n                            N <= j.y2 then\n                            O = j.id;\n                            HitPayload = j;\n                            break\n                        end\n                    end\n                end\n                if O == \"ButtonPress\" then\n                    if screens[i].mode == HitPayload.param then\n                        screens[i].mode = \"startup\"\n                    else\n                        screens[i].mode = HitPayload.param\n                    end\n                    if screens[i].mode == \"damageoutline\" then\n                        if screens[i].submode == \"\" then\n                            screens[i].submode = \"top\"\n                        end\n                    end\n                    screens[i].refresh = true;\n                    screens[i].ClickAreas = {}\n                    SaveToDatabank()\n                    SetRefresh()\n                    RenderScreens()\n                elseif O == \"ToggleBackground\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    if BackgroundMode == \"\" then\n                        BackgroundSelected = 1;\n                        BackgroundMode = backgroundModes[BackgroundSelected]\n                    else\n                        BackgroundSelected = 1;\n                        BackgroundMode = \"\"\n                    end\n                    for J, m in pairs(screens) do\n                        screens[J].refresh = true\n                    end\n                    SaveToDatabank()\n                    SetRefresh()\n                    RenderScreens()\n                elseif O == \"PreviousBackground\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    if BackgroundMode == \"\" then\n                        BackgroundSelected = 1;\n                        BackgroundMode = backgroundModes[BackgroundSelected]\n                    else\n                        if BackgroundSelected <= 1 then\n                            BackgroundSelected = #backgroundModes\n                        else\n                            BackgroundSelected = BackgroundSelected - 1\n                        end\n                        BackgroundMode = backgroundModes[BackgroundSelected]\n                    end\n                    for J, m in pairs(screens) do\n                        screens[J].refresh = true\n                    end\n                    SaveToDatabank()\n                    SetRefresh()\n                    RenderScreens()\n                elseif O == \"NextBackground\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    if BackgroundMode == \"\" then\n                        BackgroundSelected = 1;\n                        BackgroundMode = backgroundModes[BackgroundSelected]\n                    else\n                        if BackgroundSelected >= #backgroundModes then\n                            BackgroundSelected = 1\n                        else\n                            BackgroundSelected = BackgroundSelected + 1\n                        end\n                        BackgroundMode = backgroundModes[BackgroundSelected]\n                    end\n                    for J, m in pairs(screens) do\n                        screens[J].refresh = true\n                    end\n                    SaveToDatabank()\n                    SetRefresh()\n                    RenderScreens()\n                elseif O == \"DecreaseOpacity\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    if BackgroundModeOpacity > 0.1 then\n                        BackgroundModeOpacity = BackgroundModeOpacity - 0.05;\n                        for J, m in pairs(screens) do\n                            screens[J].refresh = true\n                        end\n                        SaveToDatabank()\n                        SetRefresh()\n                        RenderScreens()\n                    end\n                elseif O == \"IncreaseOpacity\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    if BackgroundModeOpacity < 1.0 then\n                        BackgroundModeOpacity = BackgroundModeOpacity + 0.05;\n                        for J, m in pairs(screens) do\n                            screens[J].refresh = true\n                        end\n                        SaveToDatabank()\n                        SetRefresh()\n                        RenderScreens()\n                    end\n                elseif O == \"ResetColors\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    db.clear()\n                    ColorPrimary = \"FF6700\"\n                    ColorSecondary = \"FFFFFF\"\n                    ColorTertiary = \"000000\"\n                    ColorHealthy = \"00FF00\"\n                    ColorWarning = \"FFFF00\"\n                    ColorCritical = \"FF0000\"\n                    ColorBackground = \"000000\"\n                    ColorBackgroundPattern = \"4f4f4f\"\n                    ColorFuelAtmospheric = \"004444\"\n                    ColorFuelSpace = \"444400\"\n                    ColorFuelRocket = \"440044\"\n                    BackgroundMode = \"deathstar\"\n                    BackgroundSelected = 1;\n                    BackgroundModeOpacity = 0.25;\n                    colorIDTable = {\n                        [1] = {\n                            id = \"ColorPrimary\",\n                            desc = \"Main HUD Color\",\n                            basec = \"FF6700\",\n                            newc = \"FF6700\"\n                        },\n                        [2] = {\n                            id = \"ColorSecondary\",\n                            desc = \"Secondary HUD Color\",\n                            basec = \"FFFFFF\",\n                            newc = \"FFFFFF\"\n                        },\n                        [3] = {\n                            id = \"ColorTertiary\",\n                            desc = \"Tertiary HUD Color\",\n                            basec = \"000000\",\n                            newc = \"000000\"\n                        },\n                        [4] = {\n                            id = \"ColorHealthy\",\n                            desc = \"Color code for Healthy/Okay\",\n                            basec = \"00FF00\",\n                            newc = \"00FF00\"\n                        },\n                        [5] = {\n                            id = \"ColorWarning\",\n                            desc = \"Color code for Damaged/Warning\",\n                            basec = \"FFFF00\",\n                            newc = \"FFFF00\"\n                        },\n                        [6] = {\n                            id = \"ColorCritical\",\n                            desc = \"Color code for Broken/Critical\",\n                            basec = \"FF0000\",\n                            newc = \"FF0000\"\n                        },\n                        [7] = {\n                            id = \"ColorBackground\",\n                            desc = \"Background Color\",\n                            basec = \"000000\",\n                            newc = \"000000\"\n                        },\n                        [8] = {\n                            id = \"ColorBackgroundPattern\",\n                            desc = \"Background Pattern Color\",\n                            basec = \"4F4F4F\",\n                            newc = \"4F4F4F\"\n                        },\n                        [9] = {\n                            id = \"ColorFuelAtmospheric\",\n                            desc = \"Color for Atmo Fuel/Elements\",\n                            basec = \"004444\",\n                            newc = \"004444\"\n                        },\n                        [10] = {\n                            id = \"ColorFuelSpace\",\n                            desc = \"Color for Space Fuel/Elements\",\n                            basec = \"444400\",\n                            newc = \"444400\"\n                        },\n                        [11] = {\n                            id = \"ColorFuelRocket\",\n                            desc = \"Color for Rocket Fuel/Elements\",\n                            basec = \"440044\",\n                            newc = \"440044\"\n                        }\n                    }\n                    SaveToDatabank()\n                    SetRefresh()\n                    RenderScreens()\n                elseif O == \"PreviousColorID\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    colorIDIndex = colorIDIndex - 1;\n                    if colorIDIndex < 1 then\n                        colorIDIndex = #colorIDTable\n                    end\n                    SaveToDatabank()\n                    SetRefresh(\"settings1\")\n                    RenderScreens(\"settings1\")\n                elseif O == \"NextColorID\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    colorIDIndex = colorIDIndex + 1;\n                    if colorIDIndex > #colorIDTable then\n                        colorIDIndex = 1\n                    end\n                    SaveToDatabank()\n                    SetRefresh(\"settings1\")\n                    RenderScreens(\"settings1\")\n                elseif O == \"ColorPosUp\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    local P = tonumber(string.sub(\n                                           colorIDTable[colorIDIndex].newc,\n                                           HitPayload.param, HitPayload.param),\n                                       16)\n                    P = P + 1;\n                    if P > 15 then P = 0 end\n                    colorIDTable[colorIDIndex].newc =\n                        replace_char(HitPayload.param,\n                                     colorIDTable[colorIDIndex].newc,\n                                     hexTable[P + 1])\n                    SaveToDatabank()\n                    SetRefresh(\"settings1\")\n                    RenderScreens(\"settings1\")\n                elseif O == \"ColorPosDown\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    local P = tonumber(string.sub(\n                                           colorIDTable[colorIDIndex].newc,\n                                           HitPayload.param, HitPayload.param),\n                                       16)\n                    P = P - 1;\n                    if P < 0 then P = 15 end\n                    colorIDTable[colorIDIndex].newc =\n                        replace_char(HitPayload.param,\n                                     colorIDTable[colorIDIndex].newc,\n                                     hexTable[P + 1])\n                    SaveToDatabank()\n                    SetRefresh(\"settings1\")\n                    RenderScreens(\"settings1\")\n                elseif O == \"ResetPosColor\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    colorIDTable[colorIDIndex].newc =\n                        colorIDTable[colorIDIndex].basec;\n                    _G[colorIDTable[colorIDIndex].id] =\n                        colorIDTable[colorIDIndex].basec;\n                    SaveToDatabank()\n                    SetRefresh()\n                    RenderScreens()\n                elseif O == \"ApplyPosColor\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    _G[colorIDTable[colorIDIndex].id] =\n                        colorIDTable[colorIDIndex].newc;\n                    SaveToDatabank()\n                    SetRefresh()\n                    RenderScreens()\n                elseif O == \"DamagedPageDown\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    CurrentDamagedPage = CurrentDamagedPage + 1;\n                    if CurrentDamagedPage >\n                        math.ceil(#damagedElements / DamagePageSize) then\n                        CurrentDamagedPage =\n                            math.ceil(#damagedElements / DamagePageSize)\n                    end\n                    HudDeselectElement()\n                    SaveToDatabank()\n                    SetRefresh(\"damage\")\n                    RenderScreens(\"damage\")\n                elseif O == \"DamagedPageUp\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    CurrentDamagedPage = CurrentDamagedPage - 1;\n                    if CurrentDamagedPage < 1 then\n                        CurrentDamagedPage = 1\n                    end\n                    HudDeselectElement()\n                    SaveToDatabank()\n                    SetRefresh(\"damage\")\n                    RenderScreens(\"damage\")\n                elseif O == \"BrokenPageDown\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    CurrentBrokenPage = CurrentBrokenPage + 1;\n                    if CurrentBrokenPage >\n                        math.ceil(#brokenElements / DamagePageSize) then\n                        CurrentBrokenPage =\n                            math.ceil(#brokenElements / DamagePageSize)\n                    end\n                    HudDeselectElement()\n                    SaveToDatabank()\n                    SetRefresh(\"damage\")\n                    RenderScreens(\"damage\")\n                elseif O == \"BrokenPageUp\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    CurrentBrokenPage = CurrentBrokenPage - 1;\n                    if CurrentBrokenPage < 1 then\n                        CurrentBrokenPage = 1\n                    end\n                    HudDeselectElement()\n                    SaveToDatabank()\n                    SetRefresh(\"damage\")\n                    RenderScreens(\"damage\")\n                elseif O == \"DMGOChangeView\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    screens[i].submode = HitPayload.param;\n                    UpdateViewDamageoutline(screens[i])\n                    SaveToDatabank()\n                    SetRefresh(\"damageoutline\", screens[i].submode)\n                    RenderScreens(\"damageoutline\", screens[i].submode)\n                elseif O == \"DMGOChangeStretch\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    if DMGOStretch == true then\n                        DMGOStretch = false\n                    else\n                        DMGOStretch = true\n                    end\n                    UpdateViewDamageoutline(screens[i])\n                    SaveToDatabank()\n                    SetRefresh(\"damageoutline\")\n                    RenderScreens(\"damageoutline\")\n                elseif O == \"ToggleDisplayAtmosphere\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    if screens[i].fuelA == true then\n                        screens[i].fuelA = false\n                    else\n                        screens[i].fuelA = true\n                    end\n                    screens[i].fuelIndex = 1;\n                    SaveToDatabank()\n                    SetRefresh(\"fuel\")\n                    RenderScreens(\"fuel\")\n                elseif O == \"ToggleDisplaySpace\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    if screens[i].fuelS == true then\n                        screens[i].fuelS = false\n                    else\n                        screens[i].fuelS = true\n                    end\n                    screens[i].fuelIndex = 1;\n                    SaveToDatabank()\n                    SetRefresh(\"fuel\")\n                    RenderScreens(\"fuel\")\n                elseif O == \"ToggleDisplayRocket\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    if screens[i].fuelR == true then\n                        screens[i].fuelR = false\n                    else\n                        screens[i].fuelR = true\n                    end\n                    screens[i].fuelIndex = 1;\n                    SaveToDatabank()\n                    SetRefresh(\"fuel\")\n                    RenderScreens(\"fuel\")\n                elseif O == \"DecreaseFuelIndex\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    screens[i].fuelIndex = screens[i].fuelIndex - 1;\n                    if screens[i].fuelIndex < 1 then\n                        screens[i].fuelIndex = 1\n                    end\n                    SaveToDatabank()\n                    SetRefresh(\"fuel\")\n                    RenderScreens(\"fuel\")\n                elseif O == \"IncreaseFuelIndex\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    screens[i].fuelIndex = screens[i].fuelIndex + 1;\n                    SaveToDatabank()\n                    SetRefresh(\"fuel\")\n                    RenderScreens(\"fuel\")\n                elseif O == \"ToggleHudMode\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    if HUDMode == true then\n                        HUDMode = false;\n                        forceDamageRedraw = true;\n                        HudDeselectElement()\n                        SaveToDatabank()\n                        SetRefresh()\n                        RenderScreens()\n                    else\n                        HUDMode = true;\n                        forceDamageRedraw = true;\n                        HudDeselectElement()\n                        SaveToDatabank()\n                        SetRefresh()\n                        RenderScreens()\n                    end\n                elseif O == \"ToggleSimulation\" and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    CurrentDamagedPage = 1;\n                    CurrentBrokenPage = 1;\n                    if SimulationMode == true then\n                        SimulationMode = false;\n                        SimulationActive = false;\n                        UpdateDamageData()\n                        UpdateTypeData()\n                        forceDamageRedraw = true;\n                        HudDeselectElement()\n                        SetRefresh(\"damage\")\n                        SetRefresh(\"damageoutline\")\n                        SetRefresh(\"settings1\")\n                        SetRefresh(\"fuel\")\n                        SaveToDatabank()\n                        RenderScreens()\n                    else\n                        SimulationMode = true;\n                        SimulationActive = false;\n                        UpdateDamageData()\n                        UpdateTypeData()\n                        forceDamageRedraw = true;\n                        HudDeselectElement()\n                        SetRefresh(\"damage\")\n                        SetRefresh(\"damageoutline\")\n                        SetRefresh(\"settings1\")\n                        SetRefresh(\"fuel\")\n                        SaveToDatabank()\n                        RenderScreens()\n                    end\n                elseif (O == \"ToggleElementLabel\" or O == \"ToggleElementLabel2\") and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    if UseMyElementNames == true then\n                        UseMyElementNames = false;\n                        SetRefresh(\"damage\")\n                        RenderScreens(\"damage\")\n                    else\n                        UseMyElementNames = true;\n                        SetRefresh(\"damage\")\n                        RenderScreens(\"damage\")\n                    end\n                elseif (O == \"SwitchScrapTier\" or O == \"SwitchScrapTier2\") and\n                    (HitPayload.mode == screens[i].mode or HitPayload.mode ==\n                        \"all\") then\n                    ScrapTier = ScrapTier + 1;\n                    if ScrapTier > 4 then ScrapTier = 1 end\n                    SetRefresh(\"damage\")\n                    RenderScreens(\"damage\")\n                end\n            end\n        end\n    end\nend\nfunction GetContentFlight()\n    local Q = \"\"\n    Q = Q .. GetHeader(\"Flight Data Report\") .. [[\n        \n    ]]\n    return Q\nend\nfunction GetContentDamage()\n    local Q = \"\"\n    if SimulationMode == true then\n        Q = Q .. GetHeader(\"Damage Report (Simulated damage)\") .. [[]]\n    else\n        Q = Q .. GetHeader(\"Damage Report\") .. [[]]\n    end\n    Q = Q .. GetContentDamageScreen()\n    return Q\nend\nfunction GetContentDamageoutline(m)\n    UpdateDataDamageoutline()\n    UpdateViewDamageoutline(m)\n    local Q = \"\"\n    Q =\n        Q .. GetHeader(\"Damage Ship Outline Report\") .. GetDamageoutlineShip() ..\n            [[<rect x=20 y=180 rx=5 ry=5 width=1880 height=840 fill=#000000 fill-opacity=0.5 style=\"stroke:#]] ..\n            ColorPrimary .. [[;stroke-width:3;\" />]]\n    if m.submode == \"top\" then\n        Q = Q .. [[\n              <rect class=xfill x=20 y=130 rx=5 ry=5 width=400 height=50 />\n              <text class=f30mxx x=220 y=165>Top View</text>\n              <rect class=xborder x=420 y=130 rx=5 ry=5 width=400 height=50 />\n              <text class=f30mx x=620 y=165>Side View</text>\n              <rect class=xborder x=820 y=130 rx=5 ry=5 width=400 height=50 />\n              <text class=f30mx x=1020 y=165>Front View</text>\n            ]]\n    elseif m.submode == \"side\" then\n        Q = Q .. [[\n              <rect class=xborder x=20 y=130 rx=5 ry=5 width=400 height=50 />\n              <text class=f30mx x=220 y=165>Top View</text>\n              <rect class=xfill x=420 y=130 rx=5 ry=5 width=400 height=50 />\n              <text class=f30mxx x=620 y=165>Side View</text>\n              <rect class=xborder x=820 y=130 rx=5 ry=5 width=400 height=50 />\n              <text class=f30mx x=1020 y=165>Front View</text>\n            ]]\n    elseif m.submode == \"front\" then\n        Q = Q .. [[\n              <rect class=xborder x=20 y=130 rx=5 ry=5 width=400 height=50 />\n              <text class=f30mx x=220 y=165>Top View</text>\n              <rect class=xborder x=420 y=130 rx=5 ry=5 width=400 height=50 />\n              <text class=f30mx x=620 y=165>Side View</text>\n              <rect class=xfill x=820 y=130 rx=5 ry=5 width=400 height=50 />\n              <text class=f30mxx x=1020 y=165>Front View</text>\n            ]]\n    else\n    end\n    Q =\n        Q .. [[<text class=f30exx x=1900 y=120>]] .. #dmgoElements .. [[ of ]] ..\n            ElementCounter .. [[ shown</text>]]\n    Q = Q ..\n            [[<rect class=xborder x=1550 y=130 rx=5 ry=5 width=50 height=50 />]]\n    if DMGOStretch == true then\n        Q = Q ..\n                [[<rect class=xfill x=1558 y=138 rx=5 ry=5 width=34 height=34 />]]\n    end\n    Q = Q .. [[<text class=f30exx x=1900 y=165>Stretch both axis</text>]]\n    return Q\nend\nfunction GetContentFuel(m)\n    if #FuelAtmosphericTanks < 1 and #FuelSpaceTanks < 1 and #FuelRocketTanks <\n        1 then return \"\" end\n    local R = 0;\n    local Q = \"\"\n    local S = {}\n    FuelDisplay = {m.fuelA, m.fuelS, m.fuelR}\n    if FuelDisplay[1] == true and #FuelAtmosphericTanks > 0 then\n        table.insert(S, \"Atmospheric\")\n        R = R + 1\n    end\n    if FuelDisplay[2] == true and #FuelSpaceTanks > 0 then\n        table.insert(S, \"Space\")\n        R = R + 1\n    end\n    if FuelDisplay[3] == true and #FuelRocketTanks > 0 then\n        table.insert(S, \"Rocket\")\n        R = R + 1\n    end\n    Q = Q .. GetHeader(\"Fuel Report (\" .. table.concat(S, \", \") .. \")\") .. [[\n    <style>\n        .fuele{fill:#]] .. ColorBackground .. [[;}\n        .fuela{fill:#]] .. ColorFuelAtmospheric .. [[;fill-opacity:1;}\n        .fuels{fill:#]] .. ColorFuelSpace .. [[;fill-opacity:1;}\n        .fuelr{fill:#]] .. ColorFuelRocket .. [[;fill-opacity:1;}\n\n        .fuela2{fill:none;stroke:#]] .. ColorFuelAtmospheric ..\n            [[;stroke-width:3px;opacity:1;}\n        .fuels2{fill:none;stroke:#]] .. ColorFuelSpace ..\n            [[;stroke-width:3px;opacity:1;}\n        .fuelr2{fill:none;stroke:#]] .. ColorFuelRocket ..\n            [[;stroke-width:3px;opacity:1;}\n\n        .fuela3{fill:#]] .. ColorFuelAtmospheric .. [[;fill-opacity:0.1;}\n        .fuels3{fill:#]] .. ColorFuelSpace .. [[;fill-opacity:0.1;}\n        .fuelr3{fill:#]] .. ColorFuelRocket .. [[;fill-opacity:0.1;}\n\n        .fuela4{fill:#]] .. ColorFuelAtmospheric .. [[;fill-opacity:1;}\n        .fuels4{fill:#]] .. ColorFuelSpace .. [[;fill-opacity:1;}\n        .fuelr4{fill:#]] .. ColorFuelRocket .. [[;fill-opacity:1;}\n    </style> ]]\n    local T = 150;\n    local U = 0;\n    local V = 0;\n    if FuelDisplay[1] == true and #FuelAtmosphericTanks > 0 then\n        if R == 1 then\n            V = 50\n        elseif R == 2 then\n            V = 6\n        elseif R == 3 then\n            V = 0\n        end\n        Q = Q .. [[\n        <svg x=20 y=]] .. 95 + T / R * U .. [[ width=1880 height=]] .. T / R ..\n                [[>\n            <rect class=\"fuele\" width=\"100%\" height=\"100%\"/>\n            <rect class=\"fuela\" width=\"]] ..\n                math.floor(100 / FuelAtmosphericTotal * FuelAtmosphericCurrent) ..\n                [[%\" height=\"100%\"/>\n        </svg>]]\n        Q =\n            Q .. [[<text class=f25sxx x=40 y=]] .. 130 + T / R * U + V .. [[>]] ..\n                GenerateCommaValue(FuelAtmosphericCurrent, true) .. [[ of ]] ..\n                GenerateCommaValue(FuelAtmosphericTotal, true) ..\n                [[ | Total Atmospheric Fuel in ]] .. #FuelAtmosphericTanks ..\n                [[ tank]] .. (#FuelAtmosphericTanks == 1 and \"\" or \"s\") ..\n                [[ (]] ..\n                math.floor(100 / FuelAtmosphericTotal * FuelAtmosphericCurrent) ..\n                [[%)</text>]]\n        U = U + 1\n    end\n    if FuelDisplay[2] == true and #FuelSpaceTanks > 0 then\n        if R == 1 then\n            V = 50\n        elseif R == 2 then\n            V = 6\n        elseif R == 3 then\n            V = 0\n        end\n        Q = Q .. [[\n        <svg x=20 y=]] .. 95 + T / R * U .. [[ width=1880 height=]] .. T / R ..\n                [[>\n            <rect class=\"fuele\" width=\"100%\" height=\"100%\"/>\n            <rect class=\"fuels\" width=\"]] ..\n                math.floor(100 / FuelSpaceTotal * FuelSpaceCurrent) ..\n                [[%\" height=\"100%\"/>\n        </svg>]]\n        Q =\n            Q .. [[<text class=f25sxx x=40 y=]] .. 130 + T / R * U + V .. [[>]] ..\n                GenerateCommaValue(FuelSpaceCurrent, true) .. [[ of ]] ..\n                GenerateCommaValue(FuelSpaceTotal, true) ..\n                [[ | Total Space Fuel in ]] .. #FuelSpaceTanks .. [[ tank]] ..\n                (#FuelSpaceTanks == 1 and \"\" or \"s\") .. [[ (]] ..\n                math.floor(100 / FuelSpaceTotal * FuelSpaceCurrent) ..\n                [[%)</text>]]\n        U = U + 1\n    end\n    if FuelDisplay[3] == true and #FuelRocketTanks > 0 then\n        if R == 1 then\n            V = 50\n        elseif R == 2 then\n            V = 6\n        elseif R == 3 then\n            V = 0\n        end\n        Q = Q .. [[\n        <svg x=20 y=]] .. 95 + T / R * U .. [[ width=1880 height=]] .. T / R ..\n                [[>\n            <rect class=\"fuele\" width=\"100%\" height=\"100%\"/>\n            <rect class=\"fuelr\" width=\"]] ..\n                math.floor(100 / FuelRocketTotal * FuelRocketCurrent) ..\n                [[%\" height=\"100%\"/>\n        </svg> ]]\n        Q =\n            Q .. [[<text class=f25sxx x=40 y=]] .. 130 + T / R * U + V .. [[>]] ..\n                GenerateCommaValue(FuelRocketCurrent, true) .. [[ of ]] ..\n                GenerateCommaValue(FuelRocketTotal, true) ..\n                [[ | Total Rocket Fuel in ]] .. #FuelRocketTanks .. [[ tank]] ..\n                (#FuelRocketTanks == 1 and \"\" or \"s\") .. [[ (]] ..\n                math.floor(100 / FuelRocketTotal * FuelRocketCurrent) ..\n                [[%)</text>]]\n    end\n    Q = Q .. [[\n    <svg x=20 y=95 width=1880 height=]] .. T .. [[>\n        <rect class=\"xborder\" width=\"100%\" height=\"100%\"/>\n    </svg>\n    ]]\n    local W = {}\n    if m.fuelIndex == nil or m.fuelIndex < 1 then m.fuelIndex = 1 end\n    if FuelDisplay[1] == true then\n        for f, j in ipairs(FuelAtmosphericTanks) do table.insert(W, j) end\n    end\n    if FuelDisplay[2] == true then\n        for f, j in ipairs(FuelSpaceTanks) do table.insert(W, j) end\n    end\n    if FuelDisplay[3] == true then\n        for f, j in ipairs(FuelRocketTanks) do table.insert(W, j) end\n    end\n    table.sort(W, function(E, F)\n        return E.type < F.type or E.type == F.type and E.id < F.id\n    end)\n    local X = 0;\n    for i = m.fuelIndex, m.fuelIndex + 6, 1 do\n        if W[i] ~= nil then\n            local Y = W[i]\n            X = X + 1;\n            local Z = \"\"\n            if Y.type == 1 then\n                Z = \"a\"\n            elseif Y.type == 2 then\n                Z = \"s\"\n            elseif Y.type == 3 then\n                Z = \"r\"\n            end\n            local _ = 1853 / 100;\n            if Y.percent == nil or Y.percent == 0 then\n                _ = 0\n            else\n                _ = _ * Y.percent\n            end\n            if Y.cvol == nil then Y.cvol = 0 end\n            if Y.name == nil then Y.name = \"\" end\n            Q = Q .. [[\n                <svg x=20 y=]] .. X * 100 + 220 ..\n                    [[ width=1880 height=100 viewBox=\"0 0 1880 100\">\n                    <rect class=\"fuel]] .. Z ..\n                    [[3\" x=\"13.5\" y=\"9.5\" width=\"1853\" height=\"81\"/>\n                    <rect class=\"fuel]] .. Z .. [[4\" x=\"13.5\" y=\"9.5\" width=\"]] ..\n                    _ .. [[\" height=\"81\"/>\n                    <rect class=\"fuel]] .. Z ..\n                    [[2\" x=\"13.5\" y=\"9.5\" width=\"1853\" height=\"81\"/>]]\n            if Y.hp == 0 then\n                Q = Q ..\n                        [[<polygon class=\"cc\" points=\"7 3 7 97 15 97 15 100 4 100 4 74.9 0 71.32 0 18.7 4 14.4 4 0 15 0 15 3 7 3\"/><polygon class=\"cc\" points=\"1873 3 1873 97 1865 97 1865 100 1876 100 1876 74.9 1880 71.32 1880 18.7 1876 14.4 1876 0 1865 0 1865 3 1873 3\"/>]]\n            elseif Y.maxhp - Y.hp > constants.epsilon then\n                Q = Q ..\n                        [[<polygon class=\"cw\" points=\"7 3 7 97 15 97 15 100 4 100 4 74.9 0 71.32 0 18.7 4 14.4 4 0 15 0 15 3 7 3\"/><polygon class=\"cw\" points=\"1873 3 1873 97 1865 97 1865 100 1876 100 1876 74.9 1880 71.32 1880 18.7 1876 14.4 1876 0 1865 0 1865 3 1873 3\"/>]]\n            else\n                Q = Q ..\n                        [[<polygon class=\"ch\" points=\"7 3 7 97 15 97 15 100 4 100 4 74.9 0 71.32 0 18.7 4 14.4 4 0 15 0 15 3 7 3\"/><polygon class=\"ch\" points=\"1873 3 1873 97 1865 97 1865 100 1876 100 1876 74.9 1880 71.32 1880 18.7 1876 14.4 1876 0 1865 0 1865 3 1873 3\"/>]]\n            end\n            if Y.hp == 0 then\n                Q = Q .. [[<text class=f80mc x=60 y=82>]] .. Y.size ..\n                        [[</text>]]\n            else\n                Q = Q .. [[<text class=f80mxx07 x=60 y=82>]] .. Y.size ..\n                        [[</text>]]\n            end\n            if Y.hp == 0 then\n                Q = Q .. [[<text class=f60mc x=940 y=74>Broken</text>]] ..\n                        [[<text class=f25ec x=1860 y=60>0 of ]] ..\n                        GenerateCommaValue(Y.vol) .. [[</text>]]\n            elseif tonumber(Y.percent) < 10 then\n                Q = Q .. [[<text class=f60mc x=940 y=74>]] .. Y.percent ..\n                        [[%</text>]] .. [[<text class=f25ec x=1860 y=60>]] ..\n                        GenerateCommaValue(Y.cvol) .. [[ of ]] ..\n                        GenerateCommaValue(Y.vol) .. [[</text>]]\n            elseif tonumber(Y.percent) < 30 then\n                Q = Q .. [[<text class=f60mw x=940 y=74>]] .. Y.percent ..\n                        [[%</text>]] .. [[<text class=f25ew x=1860 y=60>]] ..\n                        GenerateCommaValue(Y.cvol) .. [[ of ]] ..\n                        GenerateCommaValue(Y.vol) .. [[</text>]]\n            else\n                Q = Q .. [[<text class=f60mxx x=940 y=74>]] .. Y.percent ..\n                        [[%</text>]] .. [[<text class=f25exx x=1860 y=60>]] ..\n                        GenerateCommaValue(Y.cvol) .. [[ of ]] ..\n                        GenerateCommaValue(Y.vol) .. [[</text>]]\n            end\n            Q = Q .. [[<text class=f25sxx x=140 y=60>]] .. Y.name .. [[</text>]]\n            Q = Q .. [[</svg>]]\n        end\n    end\n    if #FuelAtmosphericTanks > 0 then\n        Q = Q ..\n                [[<rect class=xborder x=20 y=260 rx=5 ry=5 width=50 height=50 />]]\n        if FuelDisplay[1] == true then\n            Q = Q ..\n                    [[<rect class=xfill x=28 y=268 rx=5 ry=5 width=34 height=34 />]]\n        end\n        Q = Q .. [[<text class=f25sx x=80 y=290>ATM</text>]]\n        AddClickAreaForScreenID(m.id, {\n            mode = \"fuel\",\n            id = \"ToggleDisplayAtmosphere\",\n            x1 = 50,\n            x2 = 100,\n            y1 = 270,\n            y2 = 320\n        })\n    end\n    if #FuelSpaceTanks > 0 then\n        Q = Q ..\n                [[<rect class=xborder x=170 y=260 rx=5 ry=5 width=50 height=50 />]]\n        if FuelDisplay[2] == true then\n            Q = Q ..\n                    [[<rect class=xfill x=178 y=268 rx=5 ry=5 width=34 height=34 />]]\n        end\n        Q = Q .. [[<text class=f25sx x=230 y=290>SPC</text>]]\n        AddClickAreaForScreenID(m.id, {\n            mode = \"fuel\",\n            id = \"ToggleDisplaySpace\",\n            x1 = 200,\n            x2 = 250,\n            y1 = 270,\n            y2 = 320\n        })\n    end\n    if #FuelRocketTanks > 0 then\n        Q = Q ..\n                [[<rect class=xborder x=320 y=260 rx=5 ry=5 width=50 height=50 />]]\n        if FuelDisplay[3] == true then\n            Q = Q ..\n                    [[<rect class=xfill x=328 y=268 rx=5 ry=5 width=34 height=34 />]]\n        end\n        Q = Q .. [[<text class=f25sx x=380 y=290>RKT</text>]]\n        AddClickAreaForScreenID(m.id, {\n            mode = \"fuel\",\n            id = \"ToggleDisplayRocket\",\n            x1 = 350,\n            x2 = 400,\n            y1 = 270,\n            y2 = 320\n        })\n    end\n    if m.fuelIndex > 1 then\n        Q = Q .. [[<svg x=\"1490\" y=\"260\">\n                                <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"50\" style=\"fill:#]] ..\n                ColorPrimary .. [[;\" />\n                                <svg x=\"80\" y=\"15\"><path d=\"M47.52,14.77,30.4,30.6a3.23,3.23,0,0,0,2.19,5.6H67.41a3.23,3.23,0,0,0,2.19-5.6L52.48,14.77A3.66,3.66,0,0,0,47.52,14.77Z\" transform=\"translate(-29.36 -13.8)\"/></svg>\n                            </svg>]]\n        AddClickAreaForScreenID(m.id, {\n            mode = \"fuel\",\n            id = \"DecreaseFuelIndex\",\n            x1 = 1470,\n            x2 = 1670,\n            y1 = 270,\n            y2 = 320\n        })\n    end\n    if m.fuelIndex + X - 1 < #W then\n        Q = Q .. [[<svg x=\"1700\" y=\"260\">\n                                <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"50\" style=\"fill:#]] ..\n                ColorPrimary .. [[;\" />\n                                <svg x=\"80\" y=\"15\"><path d=\"M52.48,35.23,69.6,19.4a3.23,3.23,0,0,0-2.19-5.6H32.59a3.23,3.23,0,0,0-2.19,5.6L47.52,35.23A3.66,3.66,0,0,0,52.48,35.23Z\" transform=\"translate(-29.36 -13.8)\"/></svg>\n                            </svg>]]\n        AddClickAreaForScreenID(m.id, {\n            mode = \"fuel\",\n            id = \"IncreaseFuelIndex\",\n            x1 = 1680,\n            x2 = 1880,\n            y1 = 270,\n            y2 = 320\n        })\n    end\n    if X > 0 then\n        Q = Q .. [[<text class=f30mx x=960 y=300>]] .. #W .. [[ Tank]] ..\n                (#W == 1 and \"\" or \"s\") .. [[ (Showing ]] .. m.fuelIndex ..\n                [[ to ]] .. m.fuelIndex + X - 1 .. [[)</text>]]\n    end\n    return Q\nend\nfunction GetContentCargo()\n    local Q = \"\"\n    Q = Q .. GetHeader(\"Cargo Report\") .. [[\n        \n    ]]\n    return Q\nend\nfunction GetContentAGG()\n    local Q = \"\"\n    Q = Q .. GetHeader(\"Anti-Grav Control\") .. [[\n        \n    ]]\n    return Q\nend\nfunction GetContentMap()\n    local Q = \"\"\n    Q = Q .. GetHeader(\"Map Overview\") .. [[\n        \n    ]]\n    return Q\nend\nfunction GetContentTime()\n    local Q = \"\"\n    Q = Q .. GetHeader(\"Time\") .. epochTime()\n    Q = Q .. [[<svg x=460 y=370 width=120 height=150 viewBox=\"0 0 24 30\">\n                    <rect x=0 y=13 width=4 height=5 fill=#]] .. ColorPrimary ..\n            [[>\n                      <animate attributeName=\"height\" attributeType=\"XML\"\n                        values=\"5;21;5\" \n                        begin=\"0s\" dur=\"1s\" repeatCount=\"indefinite\" />\n                      <animate attributeName=\"y\" attributeType=\"XML\"\n                        values=\"13; 5; 13\"\n                        begin=\"0s\" dur=\"1s\" repeatCount=\"indefinite\" />\n                    </rect>\n                    <rect x=10 y=13 width=4 height=5 fill=#]] .. ColorPrimary ..\n            [[>\n                      <animate attributeName=\"height\" attributeType=\"XML\"\n                        values=\"5;21;5\" \n                        begin=\"0.15s\" dur=\"1s\" repeatCount=\"indefinite\" />\n                      <animate attributeName=\"y\" attributeType=\"XML\"\n                        values=\"13; 5; 13\"\n                        begin=\"0.15s\" dur=\"1s\" repeatCount=\"indefinite\" />\n                    </rect>\n                    <rect x=20 y=13 width=4 height=5 fill=#]] .. ColorPrimary ..\n            [[>\n                      <animate attributeName=\"height\" attributeType=\"XML\"\n                        values=\"5;21;5\" \n                        begin=\"0.3s\" dur=\"1s\" repeatCount=\"indefinite\" />\n                      <animate attributeName=\"y\" attributeType=\"XML\"\n                        values=\"13; 5; 13\"\n                        begin=\"0.3s\" dur=\"1s\" repeatCount=\"indefinite\" />\n                    </rect>\n                  </svg>]]\n    return Q\nend\nfunction GetContentSettings1()\n    local Q = \"\"\n    Q = Q .. GetHeader(\"Settings\") ..\n            [[<rect class=\"xfill\" x=\"40\" y=\"150\" rx=\"5\" ry=\"5\" width=\"820\" height=\"50\" />]]\n    if BackgroundMode == \"\" then\n        Q = Q ..\n                [[<text class=\"f30mxxx\" x=\"440\" y=\"185\">Activate background</text>]]\n    else\n        Q = Q ..\n                [[<text class=\"f30mxxx\" x=\"440\" y=\"185\">Deactivate background (']] ..\n                BackgroundMode .. [[', ]] ..\n                string.format(\"%.0f\", BackgroundModeOpacity * 100) ..\n                [[%)</text>]]\n    end\n    Q = Q .. [[\n        <rect class=\"xfill\" x=\"40\" y=\"220\" rx=\"5\" ry=\"5\" width=\"400\" height=\"50\" />\n        <text class=\"f30mxxx\" x=\"240\" y=\"255\">Previous background</text>\n        <rect class=\"xfill\" x=\"460\" y=\"220\" rx=\"5\" ry=\"5\" width=\"400\" height=\"50\" />\n        <text class=\"f30mxxx\" x=\"660\" y=\"255\">Next background</text>\n\n        <rect class=\"xfill\" x=\"40\" y=\"290\" rx=\"5\" ry=\"5\" width=\"400\" height=\"50\" />\n        <text class=\"f30mxxx\" x=\"240\" y=\"325\">Decrease Opacity</text>\n        <rect class=\"xfill\" x=\"460\" y=\"290\" rx=\"5\" ry=\"5\" width=\"400\" height=\"50\" />\n        <text class=\"f30mxxx\" x=\"660\" y=\"325\">Increase Opacity</text>\n    ]]\n    Q = Q ..\n            [[<rect class=\"xfill\" x=\"40\" y=\"360\" rx=\"5\" ry=\"5\" width=\"820\" height=\"50\" />]] ..\n            [[<text class=\"f30mxxx\" x=\"440\" y=\"395\">Reset background and all colors</text>]]\n    Q = Q .. [[<svg x=40 y=430 width=820 height=574>]] ..\n            [[<rect class=\"xborder\" x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"820\" height=\"574\" stroke-dasharray=\"2 5\" />]] ..\n            [[<rect class=\"xborder\" x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"820\" height=\"50\" />]] ..\n            [[<text class=\"f30mxx\" x=\"410\" y=\"35\">Select and change any of the ]] ..\n            #colorIDTable .. [[ HUD colors</text>]] ..\n            [[<rect class=\"xfill\" x=\"20\" y=\"70\" rx=\"5\" ry=\"5\" width=\"50\" height=\"50\" />]] ..\n            [[<svg x=32 y=74><path d=\"M1,23.13,16.79,40.25a3.23,3.23,0,0,0,5.6-2.19V3.24a3.23,3.23,0,0,0-5.6-2.19L1,18.17A3.66,3.66,0,0,0,1,23.13Z\" transform=\"translate(0.01 -0.01)\"/></svg>]] ..\n            [[<rect class=\"xfill\" x=\"750\" y=\"70\" rx=\"5\" ry=\"5\" width=\"50\" height=\"50\" />]] ..\n            [[<svg x=764 y=74><path d=\"M21.42,18.17,5.59,1.05A3.23,3.23,0,0,0,0,3.24V38.06a3.23,3.23,0,0,0,5.6,2.19L21.42,23.13A3.66,3.66,0,0,0,21.42,18.17Z\" transform=\"translate(0.01 -0.01)\"/></svg>]] ..\n            [[<rect class=\"xborder\" x=\"90\" y=\"70\" rx=\"5\" ry=\"5\" width=\"640\" height=\"50\" />]] ..\n            [[<text class=\"f30mxx\" x=\"410\" y=\"105\">]] ..\n            colorIDTable[colorIDIndex].desc .. [[</text>]] ..\n            [[<rect style=\"fill: #]] .. _G[colorIDTable[colorIDIndex].id] ..\n            [[; fill-opacity: 1; stroke: #]] .. ColorPrimary ..\n            [[; stroke-width:3;\" x=\"90\" y=\"140\" rx=\"5\" ry=\"5\" width=\"640\" height=\"70\" />]] ..\n            [[<text class=\"f20sxx\" x=\"100\" y=\"160\">Current color</text>]] ..\n            [[<svg x=90 y=230 width=640 height=140>]] ..\n            [[<rect class=xbfill x=55 y=5 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<svg x=75 y=15><path d=\"M47.52,14.77,30.4,30.6a3.23,3.23,0,0,0,2.19,5.6H67.41a3.23,3.23,0,0,0,2.19-5.6L52.48,14.77A3.66,3.66,0,0,0,47.52,14.77Z\" transform=\"translate(-29.36 -13.8)\"/></svg>]] ..\n            [[<rect class=xbfill x=145 y=5 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<svg x=165 y=15><path d=\"M47.52,14.77,30.4,30.6a3.23,3.23,0,0,0,2.19,5.6H67.41a3.23,3.23,0,0,0,2.19-5.6L52.48,14.77A3.66,3.66,0,0,0,47.52,14.77Z\" transform=\"translate(-29.36 -13.8)\"/></svg>]] ..\n            [[<rect class=xbfill x=235 y=5 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<svg x=255 y=15><path d=\"M47.52,14.77,30.4,30.6a3.23,3.23,0,0,0,2.19,5.6H67.41a3.23,3.23,0,0,0,2.19-5.6L52.48,14.77A3.66,3.66,0,0,0,47.52,14.77Z\" transform=\"translate(-29.36 -13.8)\"/></svg>]] ..\n            [[<rect class=xbfill x=325 y=5 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<svg x=345 y=15><path d=\"M47.52,14.77,30.4,30.6a3.23,3.23,0,0,0,2.19,5.6H67.41a3.23,3.23,0,0,0,2.19-5.6L52.48,14.77A3.66,3.66,0,0,0,47.52,14.77Z\" transform=\"translate(-29.36 -13.8)\"/></svg>]] ..\n            [[<rect class=xbfill x=415 y=5 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<svg x=435 y=15><path d=\"M47.52,14.77,30.4,30.6a3.23,3.23,0,0,0,2.19,5.6H67.41a3.23,3.23,0,0,0,2.19-5.6L52.48,14.77A3.66,3.66,0,0,0,47.52,14.77Z\" transform=\"translate(-29.36 -13.8)\"/></svg>]] ..\n            [[<rect class=xbfill x=505 y=5 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<svg x=525 y=15><path d=\"M47.52,14.77,30.4,30.6a3.23,3.23,0,0,0,2.19,5.6H67.41a3.23,3.23,0,0,0,2.19-5.6L52.48,14.77A3.66,3.66,0,0,0,47.52,14.77Z\" transform=\"translate(-29.36 -13.8)\"/></svg>]] ..\n            [[<text class=f60mx x=27 y=92>#</text>]] ..\n            [[<rect class=xborder x=55 y=50 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<text class=f30mxx x=95 y=80>]] ..\n            string.sub(colorIDTable[colorIDIndex].newc, 1, 1) .. [[</text>]] ..\n            [[<rect class=xborder x=145 y=50 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<text class=f30mxx x=185 y=80>]] ..\n            string.sub(colorIDTable[colorIDIndex].newc, 2, 2) .. [[</text>]] ..\n            [[<rect class=xborder x=235 y=50 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<text class=f30mxx x=275 y=80>]] ..\n            string.sub(colorIDTable[colorIDIndex].newc, 3, 3) .. [[</text>]] ..\n            [[<rect class=xborder x=325 y=50 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<text class=f30mxx x=365 y=80>]] ..\n            string.sub(colorIDTable[colorIDIndex].newc, 4, 4) .. [[</text>]] ..\n            [[<rect class=xborder x=415 y=50 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<text class=f30mxx x=455 y=80>]] ..\n            string.sub(colorIDTable[colorIDIndex].newc, 5, 5) .. [[</text>]] ..\n            [[<rect class=xborder x=505 y=50 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<text class=f30mxx x=545 y=80>]] ..\n            string.sub(colorIDTable[colorIDIndex].newc, 6, 6) .. [[</text>]] ..\n            [[<rect class=xbfill x=55 y=95 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<svg x=75 y=105><path d=\"M52.48,35.23,69.6,19.4a3.23,3.23,0,0,0-2.19-5.6H32.59a3.23,3.23,0,0,0-2.19,5.6L47.52,35.23A3.66,3.66,0,0,0,52.48,35.23Z\" transform=\"translate(-29.36 -13.8)\"/></svg>]] ..\n            [[<rect class=xbfill x=145 y=95 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<svg x=165 y=105><path d=\"M52.48,35.23,69.6,19.4a3.23,3.23,0,0,0-2.19-5.6H32.59a3.23,3.23,0,0,0-2.19,5.6L47.52,35.23A3.66,3.66,0,0,0,52.48,35.23Z\" transform=\"translate(-29.36 -13.8)\"/></svg>]] ..\n            [[<rect class=xbfill x=235 y=95 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<svg x=255 y=105><path d=\"M52.48,35.23,69.6,19.4a3.23,3.23,0,0,0-2.19-5.6H32.59a3.23,3.23,0,0,0-2.19,5.6L47.52,35.23A3.66,3.66,0,0,0,52.48,35.23Z\" transform=\"translate(-29.36 -13.8)\"/></svg>]] ..\n            [[<rect class=xbfill x=325 y=95 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<svg x=345 y=105><path d=\"M52.48,35.23,69.6,19.4a3.23,3.23,0,0,0-2.19-5.6H32.59a3.23,3.23,0,0,0-2.19,5.6L47.52,35.23A3.66,3.66,0,0,0,52.48,35.23Z\" transform=\"translate(-29.36 -13.8)\"/></svg>]] ..\n            [[<rect class=xbfill x=415 y=95 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<svg x=435 y=105><path d=\"M52.48,35.23,69.6,19.4a3.23,3.23,0,0,0-2.19-5.6H32.59a3.23,3.23,0,0,0-2.19,5.6L47.52,35.23A3.66,3.66,0,0,0,52.48,35.23Z\" transform=\"translate(-29.36 -13.8)\"/></svg>]] ..\n            [[<rect class=xbfill x=505 y=95 rx=5 ry=5 width=80 height=40 />]] ..\n            [[<svg x=525 y=105><path d=\"M52.48,35.23,69.6,19.4a3.23,3.23,0,0,0-2.19-5.6H32.59a3.23,3.23,0,0,0-2.19,5.6L47.52,35.23A3.66,3.66,0,0,0,52.48,35.23Z\" transform=\"translate(-29.36 -13.8)\"/></svg>]] ..\n            [[</svg>]] .. [[<rect style=\"fill: #]] ..\n            colorIDTable[colorIDIndex].newc .. [[; fill-opacity: 1; stroke: #]] ..\n            ColorPrimary ..\n            [[; stroke-width:3;\" x=\"90\" y=\"390\" rx=\"5\" ry=\"5\" width=\"640\" height=\"70\" />]] ..\n            [[<text class=f20sxx x=100 y=410>New color</text>]] ..\n            [[<rect class=xfill x=290 y=480 rx=5 ry=5 width=440 height=50 />]] ..\n            [[<text class=f30mxxx x=510 y=515>Apply new color</text>]] ..\n            [[<rect class=xfill x=90 y=480 rx=5 ry=5 width=185 height=50 />]] ..\n            [[<text class=f30mxxx x=182 y=515>Reset</text>]] .. [[</svg>]]\n    Q = Q .. [[<svg x=940 y=150 width=936 height=774>]] ..\n            [[<rect class=xborder x=0 y=0 rx=5 ry=5 width=936 height=774 stroke-dasharray=\"2 5\" />]] ..\n            [[<rect class=xborder x=0 y=0 rx=5 ry=5 width=936 height=50 />]] ..\n            [[<text class=f30mxx x=468 y=35>Explanation / Hints</text>]] ..\n            [[<text class=f30mxx x=468 y=400>Coming soon.</text>]]\n    Q = Q .. [[</svg>]]\n    if SimulationMode == true then\n        Q = Q ..\n                [[<rect class=\"cfill\" x=\"940\" y=\"954\" rx=\"5\" ry=\"5\" width=\"936\" height=\"50\" /><text class=\"f30mxxx\" x=\"1408\" y=\"989\">Simulating Damage to elements</text>]]\n        AddClickArea(\"settings1\", {\n            id = \"ToggleSimulation\",\n            mode = \"settings1\",\n            x1 = 940,\n            x2 = 1850,\n            y1 = 919,\n            y2 = 969\n        })\n    else\n        Q = Q ..\n                [[<rect class=\"xfill\" x=\"940\" y=\"954\" rx=\"5\" ry=\"5\" width=\"936\" height=\"50\" /><text class=\"f30mxxx\" x=\"1408\" y=\"989\">Simulate Damage to elements</text>]]\n        AddClickArea(\"settings1\", {\n            id = \"ToggleSimulation\",\n            mode = \"settings1\",\n            x1 = 940,\n            x2 = 1850,\n            y1 = 919,\n            y2 = 969\n        })\n    end\n    return Q\nend\nfunction GetContentStartup()\n    local Q = \"\"\n    Q = Q .. GetElementLogo(812, 380, \"f\", \"f\", \"f\")\n    if YourShipsName == \"Enter here\" then\n        Q = Q .. [[<g><text class=\"f160m\" x=\"960\" y=\"330\">Spaceship ID ]] ..\n                ShipID .. [[</text><animate attributeName=\"fill\" values=\"#]] ..\n                ColorPrimary .. [[;#]] .. ColorSecondary .. [[;#]] ..\n                ColorPrimary .. [[\" dur=\"30s\" repeatCount=\"indefinite\" /></g>]]\n    else\n        Q = Q .. [[<g><text class=\"f160m\" x=\"960\" y=\"330\">]] .. YourShipsName ..\n                [[</text><animate attributeName=\"fill\" values=\"#]] ..\n                ColorPrimary .. [[;#]] .. ColorSecondary .. [[;#]] ..\n                ColorPrimary .. [[\" dur=\"30s\" repeatCount=\"indefinite\" /></g>]]\n    end\n    if ShowWelcomeMessage == true then\n        Q =\n            Q .. [[<text class=\"f50mx\" x=\"960\" y=\"750\">Greetings, Commander ]] ..\n                PlayerName .. [[.</text>]]\n    end\n    if #Warnings > 0 then\n        Q = Q .. [[<text class=\"f25mc\" x=\"960\" y=\"880\">Warning: ]] ..\n                table.concat(Warnings, \" \") .. [[</text>]]\n    end\n    Q = Q ..\n            [[<text class=\"f30mxx\" style=\"fill-opacity:0.2\" x=\"960\" y=\"1000\">Damage Report v]] ..\n            VERSION ..\n            [[, by DorianGray - Discord: Dorian Gray#2623. Under GNU Public License 3.0.</text>]]\n    return Q\nend\nfunction RenderScreen(m, a0)\n    if a0 == nil then\n        PrintConsole(\"ERROR: contentToRender is nil.\")\n        unit.exit()\n    end\n    CreateClickAreasForScreen(m)\n    local Q = \"\"\n    Q = Q .. [[\n    <style>\n      body{\n        background-color: #]] .. ColorBackground .. [[; ]] ..\n            GetContentBackground(BackgroundMode) .. [[\n      }\n      .screen { width: 1920px; height: 1120px; }\n      .main { width: 1920px; height: 1040px; }\n      .menu { width: 1920px; height: 70px; stroke: #]] .. ColorPrimary ..\n            [[; stroke-width: 3; }\n\n      .xline { stroke: #]] .. ColorPrimary .. [[; stroke-width: 3;}\n      .daline { stroke: #]] .. ColorSecondary .. [[; stroke-dasharray: 2 5; }\n      .ll { fill: #FF55FF; stroke: #FF0000}\n      .xborder { fill:#]] .. ColorPrimary .. [[; fill-opacity:0.05; stroke: #]] ..\n            ColorPrimary .. [[; stroke-width:3; }\n      .xfill { fill:#]] .. ColorPrimary .. [[; fill-opacity:1; }\n      .xbfill { fill:#]] .. ColorPrimary .. [[; fill-opacity:1; stroke: #]] ..\n            ColorPrimary .. [[; stroke-width:3; }\n      .cfill { fill:#]] .. ColorCritical .. [[; fill-opacity:1; }\n\n      .hlrect { fill: #]] .. ColorPrimary .. [[; }\n      .cx { fill: #]] .. ColorPrimary .. [[; }\n      .ch { fill: #]] .. ColorHealthy .. [[; }\n      .cw { fill: #]] .. ColorWarning .. [[; } \n      .cc { fill: #]] .. ColorCritical .. [[; }\n\n      .f { fill:#]] .. ColorPrimary .. [[; }\n      .f2 { fill:#]] .. ColorSecondary .. [[; }\n      .f3 { fill:#]] .. ColorTertiary .. [[; }\n      .f250mx { font-size: 250px; text-anchor: middle; fill: #]] .. ColorPrimary ..\n            [[; font-family: Impact, Charcoal, sans-serif; }\n      .f160m { font-size: 160px; text-anchor: middle; font-family: Impact, Charcoal, sans-serif; }\n      .f160mx { font-size: 160px; text-anchor: middle; fill: #]] .. ColorPrimary ..\n            [[; font-family: Impact, Charcoal, sans-serif; }\n      .f100mx { font-size: 100px; text-anchor: middle; fill: #]] .. ColorPrimary ..\n            [[; font-family: Impact, Charcoal, sans-serif; }\n      .f80mxx07 { opacity:0.7; font-size: 80px; text-anchor: middle; fill: #]] ..\n            ColorSecondary .. [[; font-family: Impact, Charcoal, sans-serif; }\n      .f80mc { opacity:1; font-size: 80px; text-anchor: middle; fill: #]] ..\n            ColorCritical .. [[; font-family: Impact, Charcoal, sans-serif; }\n      .f60s { font-size: 60px; text-anchor: start; }\n      .f60m { font-size: 60px; text-anchor: middle; }\n      .f60e { font-size: 60px; text-anchor: end; }\n      .f60mx { font-size: 60px; text-anchor: middle; fill: #]] .. ColorPrimary ..\n            [[; font-family: Impact, Charcoal, sans-serif; }\n      .f60mxx { font-size: 60px; text-anchor: middle; fill: #]] ..\n            ColorSecondary .. [[; font-family: Impact, Charcoal, sans-serif; }\n      .f60mxx07 { opacity:0.7; font-size: 60px; text-anchor: middle; fill: #]] ..\n            ColorSecondary .. [[; font-family: Impact, Charcoal, sans-serif; }\n      .f60mc { opacity:1; font-size: 60px; text-anchor: middle; fill: #]] ..\n            ColorCritical .. [[; font-family: Impact, Charcoal, sans-serif; }\n      .f60mw { opacity:1; font-size: 60px; text-anchor: middle; fill: #]] ..\n            ColorWarning .. [[; font-family: Impact, Charcoal, sans-serif; }\n      .f50m { font-size: 50px; text-anchor: middle; }\n      .f50sxx { font-size: 50px; text-anchor: start; fill: #]] .. ColorSecondary ..\n            [[; }\n      .f50mx { font-size: 50px; fill: #]] .. ColorPrimary ..\n            [[; fill-opacity: 1; text-anchor: middle; }\n      .f50mx02 { font-size: 50px; fill: #]] .. ColorPrimary ..\n            [[; fill-opacity: 0.2; text-anchor: middle; }\n      .f50mxx { font-size: 50px; fill: #]] .. ColorSecondary ..\n            [[; fill-opacity: 1; text-anchor: middle }\n      .f36mxx { font-size: 36px; fill: #]] .. ColorSecondary ..\n            [[; fill-opacity: 1; text-anchor: middle }\n      .f30mx { font-size: 30px; fill: #]] .. ColorPrimary ..\n            [[; fill-opacity: 1; text-anchor: middle; }\n      .f30sxx { font-size: 30px; fill: #]] .. ColorSecondary ..\n            [[; fill-opacity: 1; text-anchor: start; }\n      .f30exx { font-size: 30px; fill: #]] .. ColorSecondary ..\n            [[; fill-opacity: 1; text-anchor: end; }\n      .f30mxx { font-size: 30px; fill: #]] .. ColorSecondary ..\n            [[; fill-opacity: 1; text-anchor: middle; }\n      .f30mxxx { font-size: 30px; fill: #]] .. ColorTertiary ..\n            [[; fill-opacity: 1; text-anchor: middle; }\n      .f25sx { font-size: 25px; text-anchor: start; fill: #]] .. ColorPrimary ..\n            [[; }\n      .f25exx { font-size: 25px; text-anchor: end; fill: #]] .. ColorSecondary ..\n            [[; }\n      .f25sxx { font-size: 25px; text-anchor: start; fill: #]] .. ColorSecondary ..\n            [[; }\n      .f25mw { font-size: 25px; text-anchor: middle; fill: #]] .. ColorWarning ..\n            [[; }\n      .f25mr { font-size: 25px; text-anchor: middle; fill: #]] .. ColorCritical ..\n            [[; }\n      .f25ew { font-size: 25px; text-anchor: end; fill: #]] .. ColorWarning ..\n            [[; }\n      .f25ec { font-size: 25px; text-anchor: end; fill: #]] .. ColorCritical ..\n            [[; }\n      .f25mc { font-size: 25px; text-anchor: middle; fill: #]] .. ColorCritical ..\n            [[; }\n      .f20sxx { font-size: 20px; text-anchor: start; fill: #]] .. ColorSecondary ..\n            [[; }\n      .f20mxx { font-size: 20px; text-anchor: middle; fill: #]] ..\n            ColorSecondary .. [[; }\n    </style>\n    <svg class=screen viewBox=\"0 0 1920 1120\">\n      <svg class=main x=0 y=0>]]\n    Q = Q .. a0;\n    if m.mode == \"startup\" then\n        Q = Q ..\n                [[<rect class=xborder x=0 y=0 rx=5 ry=5 width=1920 height=1040 />]]\n    else\n        Q = Q ..\n                [[<rect class=xborder x=0 y=70 rx=5 ry=5 width=1920 height=970 />]]\n    end\n    Q = Q .. [[\n      </svg>\n      <svg class=menu x=0 y=1050>\n        <rect class=xline x=0 y=0 rx=5 ry=5 width=1920 height=70 fill=#]] ..\n            ColorBackground .. [[ />\n        <text class=f50mx x=96 y=50>TIME</text>\n        <text class=f50mx x=288 y=50>DMG</text>\n        <text class=f50mx x=480 y=50>DMGO</text>\n        <text class=f50mx x=672 y=50>FUEL</text>]]\n    Q = Q .. [[\n        <text class=f50mx x=1632 y=50>HUD</text>\n        <text class=f50mx x=1824 y=50>SETS</text>\n        <line class=xline x1=192 y1=10 x2=192 y2=60 />\n        <line class=xline x1=384 y1=10 x2=384 y2=60 />\n        <line class=xline x1=576 y1=10 x2=576 y2=60 />\n        <line class=xline x1=768 y1=10 x2=768 y2=60 />]] ..\n            [[<line class=xline x1=1536 y1=10 x2=1536 y2=60 />\n        <line class=xline x1=1728 y1=10 x2=1728 y2=60 />]]\n    if HUDMode == true then\n        Q = Q .. [[\n            <rect class=hlrect x=1544 y=6 rx=0 ry=0 width=176 height=58 />\n            <text class=f50mxx x=1632 y=50>HUD</text>\n            ]]\n    end\n    if m.mode == \"damage\" then\n        Q = Q .. [[\n            <rect class=hlrect x=200 y=6 rx=0 ry=0 width=176 height=58 />\n            <text class=f50mxx x=288 y=50>DMG</text>\n            ]]\n    elseif m.mode == \"damageoutline\" then\n        Q = Q .. [[\n            <rect class=hlrect x=392 y=6 rx=0 ry=0 width=176 height=58 />\n            <text class=f50mxx x=480 y=50>DMGO</text>\n            ]]\n    elseif m.mode == \"fuel\" then\n        Q = Q .. [[\n            <rect class=hlrect x=584 y=6 rx=0 ry=0 width=176 height=58 />\n            <text class=f50mxx x=672 y=50>FUEL</text>\n            ]]\n    elseif m.mode == \"flight\" then\n        Q = Q .. [[\n            <rect class=hlrect x=776 y=6 rx=0 ry=0 width=176 height=58 />\n            <text class=f50mxx x=864 y=50>FLGT</text>\n            ]]\n    elseif m.mode == \"cargo\" then\n        Q = Q .. [[\n            <rect class=hlrect x=968 y=6 rx=0 ry=0 width=176 height=58 />\n            <text class=f50mxx x=1056 y=50>CRGO</text>\n            ]]\n    elseif m.mode == \"agg\" then\n        Q = Q .. [[\n            <rect class=hlrect x=1160 y=6 rx=0 ry=0 width=176 height=58 />\n            <text class=f50mxx x=1248 y=50>AGG</text>\n            ]]\n    elseif m.mode == \"map\" then\n        Q = Q .. [[\n            <rect class=hlrect x=1352 y=6 rx=0 ry=0 width=176 height=58 />\n            <text class=f50mxx x=1440 y=50>MAP</text>\n            ]]\n    elseif m.mode == \"time\" then\n        Q = Q .. [[\n            <rect class=hlrect x=8 y=6 rx=0 ry=0 width=176 height=58 />\n            <text class=f50mxx x=96 y=50>TIME</text>\n            ]]\n    elseif m.mode == \"settings1\" then\n        Q = Q .. [[\n            <rect class=hlrect x=1736 y=6 rx=0 ry=0 width=176 height=58 />\n            <text class=f50mxx x=1824 y=50>SETS</text>\n            ]]\n    end\n    Q = Q .. [[</svg>]]\n    Q = Q .. [[</svg>]]\n    local a1 = string.len(Q)\n    m.element.setSVG(Q)\nend\nfunction RenderScreens(a2, a3)\n    a2 = a2 or \"all\"\n    a3 = a3 or \"all\"\n    if screens ~= nil and #screens > 0 then\n        local a4 = \"\"\n        local a5 = \"\"\n        local a6 = \"\"\n        local a7 = \"\"\n        local a8 = \"\"\n        local a9 = \"\"\n        local aa = \"\"\n        local ab = \"\"\n        local ac = \"\"\n        local ad = \"\"\n        local ae = \"\"\n        local af = \"\"\n        for J, m in pairs(screens) do\n            if m.refresh == true then\n                local a0 = \"\"\n                if m.mode == \"flight\" and (a2 == \"flight\" or a2 == \"all\") then\n                    if a4 == \"\" then a4 = GetContentFlight() end\n                    a0 = a4\n                elseif m.mode == \"damage\" and (a2 == \"damage\" or a2 == \"all\") then\n                    if a5 == \"\" then a5 = GetContentDamage() end\n                    a0 = a5\n                elseif m.mode == \"damageoutline\" and\n                    (a2 == \"damageoutline\" or a2 == \"all\") then\n                    if m.submode == \"\" then\n                        m.submode = \"top\"\n                        screens[J].submode = \"top\"\n                    end\n                    if m.submode == \"top\" and (a3 == \"top\" or a3 == \"all\") then\n                        if a6 == \"\" then\n                            a6 = GetContentDamageoutline(m)\n                        end\n                        a0 = a6\n                    end\n                    if m.submode == \"side\" and (a3 == \"side\" or a3 == \"all\") then\n                        if a7 == \"\" then\n                            a7 = GetContentDamageoutline(m)\n                        end\n                        a0 = a7\n                    end\n                    if m.submode == \"front\" and (a3 == \"front\" or a3 == \"all\") then\n                        if a8 == \"\" then\n                            a8 = GetContentDamageoutline(m)\n                        end\n                        a0 = a8\n                    end\n                elseif m.mode == \"fuel\" and (a2 == \"fuel\" or a2 == \"all\") then\n                    m = WipeClickAreasForScreen(screens[J])\n                    a0 = GetContentFuel(m)\n                elseif m.mode == \"cargo\" and (a2 == \"cargo\" or a2 == \"all\") then\n                    if aa == \"\" then aa = GetContentCargo() end\n                    a0 = aa\n                elseif m.mode == \"agg\" and (a2 == \"agg\" or a2 == \"all\") then\n                    if ab == \"\" then ab = GetContentAGG() end\n                    a0 = ab\n                elseif m.mode == \"map\" and (a2 == \"map\" or a2 == \"all\") then\n                    if ac == \"\" then ac = GetContentMap() end\n                    a0 = ac\n                elseif m.mode == \"time\" and (a2 == \"time\" or a2 == \"all\") then\n                    if ad == \"\" then ad = GetContentTime() end\n                    a0 = ad\n                elseif m.mode == \"settings1\" and\n                    (a2 == \"settings1\" or a2 == \"all\") then\n                    if ae == \"\" then\n                        ae = GetContentSettings1()\n                    end\n                    a0 = ae\n                elseif m.mode == \"startup\" and (a2 == \"startup\" or a2 == \"all\") then\n                    if af == \"\" then af = GetContentStartup() end\n                    a0 = af\n                else\n                    a0 = \"Invalid screen mode. ('\" .. m.mode .. \"')\"\n                end\n                if a0 ~= \"\" then\n                    RenderScreen(m, a0)\n                else\n                    DrawCenteredText(\n                        \"ERROR: No contentToRender delivered for \" .. m.mode)\n                    PrintConsole(\"ERROR: No contentToRender delivered for \" ..\n                                     m.mode)\n                    unit.exit()\n                end\n                screens[J].refresh = false\n            end\n        end\n    end\n    if HUDMode == true then\n        system.setScreen(GetContentDamageHUDOutput())\n        system.showScreen(1)\n    else\n        system.showScreen(0)\n    end\nend\nfunction OnTickData(C)\n    if formerTime + 60 < system.getTime() then SetRefresh(\"time\") end\n    totalShipMass = core.getConstructMass()\n    if formerTotalShipMass ~= totalShipMass then\n        UpdateDamageData(true)\n        UpdateTypeData()\n        SetRefresh()\n        formerTotalShipMass = totalShipMass\n    else\n        UpdateDamageData(C)\n        UpdateTypeData()\n    end\n    RenderScreens()\nend\nunit.hide()\nClearConsole()\nPrintConsole(\"DAMAGE REPORT v\" .. VERSION .. \" STARTED\", true)\nInitiateSlots()\nLoadFromDatabank()\nSwitchScreens(\"on\")\nInitiateScreens()\nif core == nil then\n    PrintConsole(\"ERROR: Connect the core to the programming board.\")\n    unit.exit()\nelse\n    OperatorID = unit.getMasterPlayerId()\n    OperatorData = database.getPlayer(OperatorID)\n    PlayerName = OperatorData[\"name\"]\n    ShipID = core.getConstructId()\nend\nif db == nil then\n    table.insert(Warnings, \"No databank connected, won't save/load settings.\")\nend\nif YourShipsName == \"Enter here\" then\n    table.insert(Warnings, \"No ship name set in LUA settings.\")\nend\nif SkillRepairToolEfficiency == 0 and SkillRepairToolOptimization == 0 and\n    StatFuelTankOptimization == 0 and StatContainerOptimization == 0 and\n    StatAtmosphericFuelTankHandling == 0 and StatSpaceFuelTankHandling == 0 and\n    StatRocketFuelTankHandling == 0 then\n    table.insert(Warnings, \"No talents/stats set in LUA settings.\")\nend\nif SkillRepairToolEfficiency < 0 or SkillRepairToolOptimization < 0 or\n    StatFuelTankOptimization < 0 or StatContainerOptimization < 0 or\n    StatAtmosphericFuelTankHandling < 0 or StatSpaceFuelTankHandling < 0 or\n    StatRocketFuelTankHandling < 0 or SkillRepairToolEfficiency > 5 or\n    SkillRepairToolOptimization > 5 or StatFuelTankOptimization > 5 or\n    StatContainerOptimization > 5 or StatAtmosphericFuelTankHandling > 5 or\n    StatSpaceFuelTankHandling > 5 or StatRocketFuelTankHandling > 5 then\n    PrintConsole(\n        \"ERROR: Talents/stats can only range from 0 to 5. Please set correctly in LUA settings and reactivate script.\")\n    unit.exit()\nend\nif screens == nil or #screens == 0 then\n    HUDMode = true;\n    PrintConsole(\"Warning: No screens connected. Entering HUD mode only.\")\nend\nOnTickData(true)\nunit.setTimer('UpdateData', UpdateDataInterval)\nunit.setTimer('UpdateHighlight', HighlightBlinkingInterval)\n","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"12"},{"code":"ActionUp()","filter":{"args":[{"value":"up"}],"signature":"actionStart(action)","slotKey":"-2"},"key":"13"},{"code":"ActionDown()","filter":{"args":[{"value":"down"}],"signature":"actionStart(action)","slotKey":"-2"},"key":"14"},{"code":"ActionStrafeLeft()","filter":{"args":[{"value":"strafeleft"}],"signature":"actionStart(action)","slotKey":"-2"},"key":"15"},{"code":"ActionStrafeRight()","filter":{"args":[{"value":"straferight"}],"signature":"actionStart(action)","slotKey":"-2"},"key":"16"},{"code":"KeyCTRLPressed = true","filter":{"args":[{"value":"brake"}],"signature":"actionStart(action)","slotKey":"-2"},"key":"17"},{"code":"KeyCTRLPressed = false","filter":{"args":[{"value":"brake"}],"signature":"actionStop(action)","slotKey":"-2"},"key":"18"},{"code":"ActionOption1()","filter":{"args":[{"value":"option1"}],"signature":"actionStart(action)","slotKey":"-2"},"key":"19"},{"code":"ActionOption2()","filter":{"args":[{"value":"option2"}],"signature":"actionStart(action)","slotKey":"-2"},"key":"20"},{"code":"ActionOption3()","filter":{"args":[{"value":"option3"}],"signature":"actionStart(action)","slotKey":"-2"},"key":"21"},{"code":"ActionOption4()","filter":{"args":[{"value":"option4"}],"signature":"actionStart(action)","slotKey":"-2"},"key":"22"},{"code":"ActionOption9()","filter":{"args":[{"value":"option9"}],"signature":"actionStart(action)","slotKey":"-2"},"key":"23"},{"code":"ActionOption8()","filter":{"args":[{"value":"option8"}],"signature":"actionStart(action)","slotKey":"-2"},"key":"24"}],"methods":[],"events":[]}